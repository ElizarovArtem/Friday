{"version":3,"sources":["Components/Table/Table.module.css","Components/Header/Header.module.css","SuperComponents/c4-SuperEditableSpan/SuperEditableSpan.module.css","SuperComponents/c1-SuperInputText/SuperInputText.module.css","Components/PasswordRecovery/PasswordRecovery.module.css","Components/Pagination/Pagination.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","SuperComponents/c6-SuperRadio/SuperRadio.module.css","SuperComponents/c5-SuperSelect/SuperSelect.module.css","SuperComponents/c7-SuperRange/SuperRange.module.css","Components/Login/Login.module.css","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","Components/Registration/registration-API.ts","store/registration-reducer.ts","Components/Registration/Registration.tsx","Components/Profile/Profile.tsx","SuperComponents/c6-SuperRadio/SuperRadio.tsx","SuperComponents/c5-SuperSelect/SuperSelect.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","SuperComponents/c4-SuperEditableSpan/SuperEditableSpan.tsx","SuperComponents/c7-SuperRange/SuperRange.tsx","Components/Test/Test.tsx","Components/Error/Error.tsx","Components/Login/loginAPI.ts","store/login-reducer.ts","Components/Login/Login.tsx","Components/PasswordRecovery/recoveryPassAPI.ts","store/recoveryPass-reducer.ts","Components/PasswordRecovery/PasswordRecoveryContainer.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/NewPasswordEnter/enterNewPassAPI.ts","store/enterNewPass-reducer.ts","Components/NewPasswordEnter/NewPasswordEnterContainer.tsx","Components/NewPasswordEnter/NewPasswordEnter.tsx","Components/Table/TableItem/TableItem.tsx","Components/Table/TableHeader/TableHeader.tsx","Components/Table/Table.tsx","Components/Packs/packs-api.ts","store/packs-reducer.ts","SuperComponents/c8-SuperDoubleRange/SuperDoubleRange.tsx","Components/Search/Search.tsx","Components/Pagination/Pagination.tsx","Components/Packs/Packs.tsx","Components/Cards/Cards.tsx","Components/Routes/Routes.tsx","Components/Header/Header.tsx","App.tsx","reportWebVitals.ts","store/profile-reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","registerAPI","data","post","InitialState","isNewUser","Registration","useState","email","password","repeatPassword","setData","dispatch","useDispatch","onChangeHandler","fieldName","target","name","useSelector","state","registration","to","style","margin","placeholder","onClick","then","res","console","log","isRegistered","catch","err","alert","registerUserTC","Profile","SuperRadio","options","onChangeOption","mappedOptions","map","o","i","input","checked","SuperSelect","op","select","SuperCheckbox","onChangeChecked","children","checkbox","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","onMouseEnter","setOnMouseEnter","spanStyle","onMouseLeave","message","doubleClick","divForSpan","SuperRange","onChangeRange","finalRangeClassName","range","Test","marginBottom","Error","axiosInstance","loginAPI","isLoggedIn","isLoading","setIsLoggedInAC","setErrorAC","setIsLoadingAC","Login","setEmail","setPassword","rememberMe","setRememberMe","validateError","setValidateError","login","loginForm","disabled","response","recoveryPassAPI","from","FORGOT_PASS","CHANGE_EMAIL","EMAIL_SENDED","emailSended","PasswordRecoveryContainer","connect","recoveryPass","sendRecoveryMess","addUserEmail","userEmailAC","container","htmlFor","id","title","button","enterNewPassAPI","resetPasswordToken","CHANGE_PASSWORD","SET_ERROR","SEND_NEW_PASS_SUCCES","newPassword","succes","enterNewPass","changePassword","sendNewPassword","token","setError","props","useParams","ROUTE","LOGIN","TableItem","packItem","cardItem","tableItem","cardsCount","updated","buttonsDiv","deleteItem","_id","updateItem","question","answer","grade","TableHeader","fieldNames","createItem","tableHeader","Table","table","packs","p","cards","packsAPI","packName","min","max","pageCount","page","get","cardsPack","delete","put","cardsPAckId","reqModel","card","searchValue","packsOnPage","currentPage","totalPacksCount","getPacksTC","getState","searchName","cardPacks","totalPacks","cardPacksTotalCount","getCardsTC","cardsPackId","SuperDoubleRange","width","Slider","val","valueLabelDisplay","aria-labelledby","Search","setMin","setMax","valueSearch","setValueSearch","setSearchValueAC","Pagination","countItems","pageTotalCount","Math","ceil","pages","onPageClick","setCurrentPageAC","push","activeButton","wrapperContainer","Number","Packs","useEffect","position","left","top","deletePackTC","updatePackTC","Cards","cardId","packId","updateCardTC","deleteCardTC","model","cardsPack_id","TEST","REGISTRATION","PROFILE","PAS_RECOVERY","PAS_ENTER","ERROR","PACKS","CARDS","Routes","path","exact","render","NewPasswordEnterContainer","Header","list","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3350a3d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2EfBj\",\"tableItem\":\"Table_tableItem__26iBW\",\"tableHeader\":\"Table_tableHeader__2sDg0\",\"buttonsDiv\":\"Table_buttonsDiv__15tGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Header_list__2Rb7Q\",\"link\":\"Header_link__3VkOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__fNj3J\",\"divForSpan\":\"SuperEditableSpan_divForSpan__d35Se\",\"doubleClick\":\"SuperEditableSpan_doubleClick__27fZd\",\"message\":\"SuperEditableSpan_message__Q0KO0\",\"superSpan\":\"SuperEditableSpan_superSpan__1Q5sU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3eV5I\",\"errorInput\":\"SuperInputText_errorInput__kf0Ui\",\"error\":\"SuperInputText_error__2aLT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"PasswordRecovery_error__34KXG\",\"container\":\"PasswordRecovery_container__2OtDQ\",\"button\":\"PasswordRecovery_button__z9r2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContainer\":\"Pagination_wrapperContainer__XzWoD\",\"activeButton\":\"Pagination_activeButton__1zRzx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__x5oOg\",\"red\":\"SuperButton_red__MfG3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__7k5Ln\",\"spanClassName\":\"SuperCheckbox_spanClassName__2RA7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperRadio_select__188kB\",\"input\":\"SuperRadio_input__ALtHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3cLyb\",\"input\":\"SuperSelect_input__3RkGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2NTnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3isbx\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${className} ${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\nimport {DataRegistrationType} from \"./Registration\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0',\r\n    withCredentials: true\r\n})\r\n\r\nexport const registerAPI = {\r\n    register(data: DataRegistrationType) {\r\n        return instance.post<CommonResponseType<ResponseRegisterType>>('/auth/register', data)\r\n    }\r\n}\r\n\r\n//types\r\nexport type CommonResponseType<T = {}> = {\r\n    data: T\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: number\r\n}\r\ntype ResponseRegisterType = {\r\n    addedUser: any\r\n    error?: string\r\n}","import {DataRegistrationType} from \"../Components/Registration/Registration\";\r\nimport {Dispatch} from \"redux\";\r\nimport {registerAPI} from \"../Components/Registration/registration-API\";\r\n\r\n\r\nconst InitialState: InitialStateType = {\r\n    isNewUser: false\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET-REGISTERED-USER\":\r\n            return {...state, isNewUser: action.isRegistered}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setRegisteredUserAC = (isRegistered: boolean) => ({type: 'auth/SET-REGISTERED-USER', isRegistered} as const)\r\n\r\n\r\n//thunks\r\nexport const registerUserTC = (data: DataRegistrationType) => (dispatch: Dispatch<ActionTypes>) => {\r\n    registerAPI.register(data)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setRegisteredUserAC(true))\r\n        })\r\n        .catch(err => {\r\n            alert(err)\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype ActionTypes = ReturnType<typeof setRegisteredUserAC>\r\ntype InitialStateType = {\r\n    isNewUser: boolean\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {registerUserTC, setRegisteredUserAC} from \"../../store/registration-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const Registration = () => {\r\n    const [data, setData] = useState<DataRegistrationType>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: ''\r\n    })\r\n    const dispatch = useDispatch()\r\n    const isNewUser = useSelector<AppRootStateType, boolean>(state => state.registration.isNewUser)\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fieldName = e.target.name\r\n        for (let key in data) {\r\n            if (key === fieldName) {\r\n                setData({...data, [key]: e.currentTarget.value})\r\n            }\r\n        }\r\n    }\r\n    const onSubmitRegistration = () => {\r\n        data.password === data.repeatPassword\r\n        && dispatch(registerUserTC({email: data.email, password: data.password}))\r\n        setData({email: '', password: '', repeatPassword: ''})\r\n    }\r\n\r\n    if (isNewUser) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'email'}\r\n                                name={'email'}\r\n                                value={data.email}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'password'}\r\n                                name={'password'}\r\n                                value={data.password}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'repeat password'}\r\n                                name={'repeatPassword'}\r\n                                value={data.repeatPassword}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperButton onClick={onSubmitRegistration}>Register</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\nexport type DataRegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPassword?: string\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {// map options with key\r\n        const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n            // onChange, onChangeOption\r\n            if (onChangeOption) {\r\n                onChangeOption(o)\r\n            }\r\n        }\r\n\r\n        return <label key={name + \"-\" + i}>\r\n            <input\r\n                className={s.input}\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={value === o ? true : false}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\nimport s from \"./SuperSelect.module.css\"\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions = options?.map((op,i) => <option key={i}>{op}</option>) // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n    const [onMouseEnter, setOnMouseEnter] = useState<boolean>(false);\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode(); // выключить editMode при нажатии Enter\r\n        setEditMode(false);\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false);\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true);\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.spanStyle} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <div><SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onMouseEnter={() => setOnMouseEnter(true)}\r\n                        onMouseLeave={() => setOnMouseEnter(false)}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                        <div className={onMouseEnter ? s.message : s.doubleClick}>Click outside for enter</div>\r\n                    </div>\r\n                ) : (\r\n                    <div className={s.divForSpan}>\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        onMouseEnter={() => setOnMouseEnter(true)}\r\n                        onMouseLeave={() => setOnMouseEnter(false)}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                        <div className={onMouseEnter ? s.message : s.doubleClick}>DoubleClick for changes</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={value}\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperRadio from \"../../SuperComponents/c6-SuperRadio/SuperRadio\";\r\nimport SuperSelect from \"../../SuperComponents/c5-SuperSelect/SuperSelect\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../SuperComponents/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperRange from \"../../SuperComponents/c7-SuperRange/SuperRange\";\r\n\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n            <div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperInputText/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperButton>Submit</SuperButton></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperRadio/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperSelect/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperCheckbox/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperEditableSpan value={\"Editable span\"}/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperRange/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const loginAPI = {\r\n    login(data: LoginRequestType) {\r\n         return axiosInstance.post(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(\"auth/me\")\r\n    },\r\n    me() {\r\n        return axiosInstance.post(\"auth/me\")\r\n    }\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","import {Dispatch} from \"redux\";\r\nimport {loginAPI, LoginRequestType} from \"../Components/Login/loginAPI\";\r\n\r\nconst InitialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isLoading: 'idle'\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nconst setIsLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {type: \"SET-IS-LOGGED-IN\", isLoggedIn} as const\r\n}\r\nconst setErrorAC = (error: string | null ) => {\r\n    return {type: \"SET-ERROR\", error} as const\r\n}\r\nconst setIsLoadingAC = (isLoading: IsLoadingValuesType ) => {\r\n    return {type: \"SET-IS-LOADING\", isLoading} as const\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginRequestType) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setErrorAC(null))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const authMeTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.me()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.me()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionTypes = ReturnType<typeof setIsLoggedInAC> | ReturnType<typeof setErrorAC> | ReturnType<typeof setIsLoadingAC>\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isLoading: IsLoadingValuesType\r\n}\r\nexport type IsLoadingValuesType = 'loading' | 'idle'","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {IsLoadingValuesType, loginTC} from \"../../store/login-reducer\";\r\n\r\n\r\nexport const Login = () => {\r\n    let [email, setEmail] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let [rememberMe, setRememberMe] = useState(false)\r\n    let [validateError, setValidateError] = useState<string | null>(null)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.login.error)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.login.isLoading)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.currentTarget.checked)\r\n\r\n    const onClickLogin = () => {\r\n        if(email === \"\" || password === \"\") {\r\n            setValidateError(\"Email or password required\")\r\n            return\r\n        }\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n    const onKeyPress = () => {\r\n        if(validateError != null) {\r\n            setValidateError(null)\r\n        }\r\n    }\r\n\r\n    if(isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            {isLoading === \"loading\" ? <div>Loading...</div> : null}\r\n            <div className={s.loginForm}>\r\n                <label >Email: <input type={\"email\"} value={email} onKeyPress={onKeyPress} onChange={onChangeEmail}/></label>\r\n                <label>Password: <input type=\"password\" value={password} onKeyPress={onKeyPress} onChange={onChangePassword}/></label>\r\n                <label>Remember me: <input type=\"checkbox\" checked={rememberMe} onChange={onChangeRememberMe}/></label>\r\n                <button disabled={isLoading === \"loading\" ? true : false} onClick={onClickLogin}>Log IN</button>\r\n            </div>\r\n            {error ? <div>{error}</div> : null}\r\n            {validateError ? <div>{validateError}</div> : null}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\n\r\nexport const recoveryPassAPI = {\r\n\r\n    sendEmail(email: string) {\r\n       return instance.post('auth/forgot',\r\n            {\r\n                email,\r\n                from: \"AlexB admin\",\r\n                message: \"<div style=\\\"background-color: lime; padding: 15px\\\"> password recovery link: <a href=\\'http://elizarovartem.github.io/Friday/#/pas-enter/$token$\\'>link</a></div>\\`\"\r\n            })\r\n    }\r\n}","\r\nimport { recoveryPassAPI } from \"../Components/PasswordRecovery/recoveryPassAPI\";\r\n\r\nconst FORGOT_PASS = 'FORGOT_PASS';\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL';\r\nconst EMAIL_SENDED = 'EMAIL_SENDED';\r\n\r\ntype ForgotPassType = {\r\n    type: typeof FORGOT_PASS\r\n    error: string\r\n}\r\n\r\ntype UserEmailType = {\r\n    type: typeof CHANGE_EMAIL\r\n    email: string\r\n}\r\n\r\ntype EmailSendedType = {\r\n    type: typeof EMAIL_SENDED\r\n    emailSended: boolean\r\n}\r\n\r\n\r\n\r\nexport const forgotPassAC = (error: string): ForgotPassType => {\r\n    return {\r\n        type: FORGOT_PASS,\r\n        error\r\n    }\r\n}\r\n\r\nexport const userEmailAC = (email: string): UserEmailType => {\r\n    return {\r\n        type: CHANGE_EMAIL,\r\n        email\r\n    }\r\n}\r\n\r\nexport const emailSended = (emailSended: boolean): EmailSendedType => {\r\n    return {\r\n        type: EMAIL_SENDED,\r\n        emailSended\r\n    }\r\n}\r\n\r\nexport const sendRecoveryMess = (email: string) => (dispatch: (action:ActionTypes) => void) => {\r\n    \r\n    recoveryPassAPI.sendEmail(email).then(res => {\r\n        dispatch(emailSended(true));\r\n    } ).catch(err => {\r\n        dispatch(forgotPassAC(err.response.data.error))\r\n    })\r\n}\r\n\r\nexport const addUserEmail = (email: string) => (dispatch: (action:ActionTypes) => void) => {\r\n    dispatch(userEmailAC(email));\r\n}\r\n\r\nconst InitialState = {\r\n    error: '',\r\n    email: '',\r\n    emailSended: false \r\n}\r\n\r\n\r\nexport const recoveryPassReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FORGOT_PASS: \r\n            return {\r\n                    ...state,\r\n                    error: action.error\r\n            }\r\n\r\n        case CHANGE_EMAIL: \r\n        return {\r\n            ...state,\r\n            email: action.email\r\n        }    \r\n\r\n        case EMAIL_SENDED: \r\n        return {\r\n            ...state,\r\n            emailSended: action.emailSended\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionTypes = ForgotPassType | UserEmailType | EmailSendedType\r\ntype InitialStateType = typeof InitialState;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendRecoveryMess,addUserEmail } from \"../../store/recoveryPass-reducer\";\r\nimport { AppRootStateType } from \"../../store/store\";\r\nimport { PasswordRecovery } from \"./PasswordRecovery\";\r\n\r\n\r\n const mapStateToProps = (state: AppRootStateType) => ({\r\n   error: state.recoveryPass.error,\r\n   email: state.recoveryPass.email,\r\n   emailSended: state.recoveryPass.emailSended\r\n })\r\n\r\n\r\n\r\nconst PasswordRecoveryContainer = connect(mapStateToProps,{sendRecoveryMess, addUserEmail})(PasswordRecovery)\r\n\r\nexport default PasswordRecoveryContainer\r\n\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ROUTE } from \"../Routes/Routes\";\r\nimport style from \"./PasswordRecovery.module.css\"\r\n\r\ntype PasswordRecoveryType = {\r\n  error: string\r\n  email: string\r\n  emailSended: boolean\r\n  sendRecoveryMess: (email: string) => void\r\n  addUserEmail: (email: string) => void\r\n}\r\n\r\n\r\nexport const PasswordRecovery: React.FC<PasswordRecoveryType> = ({error, email, emailSended, sendRecoveryMess, addUserEmail}) => {\r\n  \r\n  const addEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.currentTarget.value &&  addUserEmail(e.currentTarget.value)\r\n  }\r\n\r\n  \r\n  const sendEmail = () => {\r\n    sendRecoveryMess(email);\r\n  }\r\n  \r\n  if(emailSended && !error) {\r\n    return <Redirect to={'/pas-enter/error'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>PasswordRecovery</h1>\r\n      <div className = {style.container}>\r\n        {error && <p className = {style.error}>{error}</p>}\r\n        <label htmlFor=\"email\">Enter your Email</label>\r\n        <input onChange={addEmail} id=\"email\" type=\"email\" title=\"Email\" />\r\n        <button className = {style.button} onClick = {sendEmail} >Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\n\r\nexport const enterNewPassAPI = {\r\n\r\n    sendNewPass(password: string, resetPasswordToken: string) {\r\n       return instance.post('auth/set-new-password',\r\n            {\r\n                password,\r\n                resetPasswordToken\r\n            })\r\n    }\r\n}","\r\nimport { enterNewPassAPI } from \"../Components/NewPasswordEnter/enterNewPassAPI\";\r\n\r\n\r\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SEND_NEW_PASS_SUCCES = 'SEND_NEW_PASS_SUCCES';\r\n\r\nexport const setError = (error: string): SetErrorPasswordType => {\r\n    return {\r\n        type: SET_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport const changePassword = (password: string):ChangePasswordType  => {\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        password\r\n    }\r\n}\r\n\r\nexport const succesfullChange = (succes: boolean): SuccesfullPassChange => {\r\n    return {\r\n        type: SEND_NEW_PASS_SUCCES,\r\n        succes\r\n    }\r\n}\r\n\r\nexport const sendNewPassword = (newPassword: string, token: string) => (dispatch: (action:ActionTypes) => void) => {\r\n        enterNewPassAPI.sendNewPass(newPassword,token).then(res => {\r\n            dispatch(succesfullChange(true))\r\n        }).catch(error => {\r\n            dispatch(setError(error.response.data.error));\r\n        })\r\n        \r\n}\r\n\r\nconst InitialState = {\r\n    newPassword:'',\r\n    error: '',\r\n    succes: false\r\n}\r\n\r\n\r\n\r\nexport const enterNewPassReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case CHANGE_PASSWORD: \r\n            return {\r\n                ...state,\r\n                newPassword: action.password\r\n            }\r\n        case SET_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }    \r\n        case SEND_NEW_PASS_SUCCES:\r\n            return {\r\n                ...state,\r\n                succes: action.succes\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\ntype ChangePasswordType = {\r\n    type: typeof CHANGE_PASSWORD,\r\n    password: string \r\n}\r\ntype SetErrorPasswordType = {\r\n    type: typeof SET_ERROR,\r\n    error: string \r\n}\r\n\r\ntype SuccesfullPassChange = {\r\n    type: typeof SEND_NEW_PASS_SUCCES,\r\n    succes: boolean\r\n}\r\ntype ActionTypes = ChangePasswordType | SetErrorPasswordType | SuccesfullPassChange\r\ntype InitialStateType = typeof InitialState","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { NewPasswordEnter } from './NewPasswordEnter';\r\nimport {changePassword, sendNewPassword} from '../../store/enterNewPass-reducer'\r\n\r\nconst mapStateToProps = (state:AppRootStateType) =>{\r\n    return {\r\n        newPassword: state.enterNewPass.newPassword,\r\n        error: state.enterNewPass.error,\r\n        succes: state.enterNewPass.succes\r\n    }\r\n}\r\n\r\n \r\nexport default connect(mapStateToProps, {changePassword,sendNewPassword})(NewPasswordEnter)","import React from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { ROUTE } from \"../Routes/Routes\";\r\n\r\n\r\ninterface ParamTypes {\r\n  token: string\r\n}\r\n\r\ntype NewPasswordEnterType = {\r\n  newPassword: string\r\n  error: string\r\n  succes: boolean\r\n  changePassword: (value: string) => void\r\n  sendNewPassword: (pas: string, token: string) => void\r\n}\r\n\r\nexport const NewPasswordEnter = (props:NewPasswordEnterType) => {\r\n\r\n  let {token} = useParams<ParamTypes>()\r\n  \r\n  const onChangeNewPass = (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n    props.changePassword(e.currentTarget.value)\r\n  }\r\n\r\n  const onSendNewPass = () => {\r\n    props.sendNewPassword(props.newPassword, token)\r\n  }\r\n\r\n  if(props.succes) {\r\n    return <Redirect to ={ROUTE.LOGIN} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please enter new password</h1>\r\n      {props.error && props.error}\r\n      <div>\r\n        <label htmlFor=\"password\">Enter new password</label>\r\n        <input onChange={onChangeNewPass} value={props.newPassword} id=\"password\" type=\"password\" />\r\n        <button onClick={onSendNewPass}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import s from \"../Table.module.css\";\r\nimport SuperButton from \"../../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {CardType, PackType} from \"../../Packs/packs-api\";\r\n\r\ntype TableItemPropsType = {\r\n    packItem?: PackType\r\n    cardItem?: CardType\r\n    deleteItem: (id: string) => void\r\n    updateItem: (id: string) => void\r\n}\r\nexport const TableItem = ({packItem, cardItem, ...props}: TableItemPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            {packItem ?\r\n                <div className={s.tableItem}>\r\n                    <div>{packItem.name}</div>\r\n                    <div>{packItem.cardsCount}</div>\r\n                    <div>{packItem.updated}</div>\r\n                    <div className={s.buttonsDiv}>\r\n                        <SuperButton onClick={() => props.deleteItem(packItem._id)}>Delete</SuperButton>\r\n                        <SuperButton onClick={() => props.updateItem(packItem._id)}>Update</SuperButton>\r\n                        <NavLink to={`/cards/${packItem._id}`}>Cards</NavLink>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className={s.tableItem}>\r\n                    <div>{cardItem && cardItem.question}</div>\r\n                    <div>{cardItem && cardItem.answer}</div>\r\n                    <div>{cardItem && cardItem.grade}</div>\r\n                    <div>{cardItem && cardItem.updated}</div>\r\n                    <div className={s.buttonsDiv}>\r\n                        <SuperButton\r\n                            onClick={() => props.deleteItem(cardItem ? cardItem._id : '')}>Delete</SuperButton>\r\n                        <SuperButton onClick={() => props.updateItem(cardItem ? cardItem._id : '')}>Update</SuperButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import s from \"../Table.module.css\";\r\nimport SuperButton from \"../../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport React from \"react\";\r\n\r\ntype TableHeaderPopsType = {\r\n    fieldNames: string[]\r\n    createItem: () => void\r\n}\r\nexport const TableHeader = ({fieldNames, createItem}: TableHeaderPopsType) => {\r\n    return (\r\n        <div className={`${s.tableItem} ${s.tableHeader}`}>\r\n            <div>{fieldNames[0]}</div>\r\n            <div>{fieldNames[1]}</div>\r\n            <div>{fieldNames[2]}</div>\r\n            {fieldNames[4] && <div>{fieldNames[4]}</div>}\r\n            <div>\r\n                {fieldNames[3]}: <SuperButton onClick={createItem}>Add</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Table.module.css'\r\nimport {CardType, PackType} from \"../Packs/packs-api\";\r\nimport {TableItem} from \"./TableItem/TableItem\";\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\n\r\n\r\ntype TablePropsType = {\r\n    packs?: Array<PackType>\r\n    cards?: Array<CardType>\r\n    fieldNames: string[]\r\n    createItem: () => void\r\n    deleteItem: (id: string) => void\r\n    updateItem: (id: string) => void\r\n}\r\nexport const Table = (props: TablePropsType) => {\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <TableHeader fieldNames={props.fieldNames} createItem={props.createItem}/>\r\n            <div>\r\n                {props.packs && props.packs.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={props.updateItem}\r\n                    deleteItem={props.deleteItem}\r\n                    packItem={p}\r\n                />)}\r\n                {props.cards && props.cards.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={props.updateItem}\r\n                    deleteItem={props.deleteItem}\r\n                    cardItem={p}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsAPI = {\r\n    getPacks(packName: string, min: number, max: number, pageCount: number = 15, page: number = 1) {\r\n        return axiosInstance\r\n            .get<GetPacksResponseType>(`cards/pack?pageCount=${pageCount}&page=${page}&packName=${packName}&min=${min}&max=${max}`)\r\n    },\r\n    createPack(title: string) {\r\n        return axiosInstance.post(`cards/pack`, {cardsPack: {name: title}})\r\n    },\r\n    deletePack(id: string) {\r\n        return axiosInstance.delete(`cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string, name: string) {\r\n        return axiosInstance.put(`cards/pack`, {cardsPack: {_id: id, name}})\r\n    },\r\n    getCards(cardsPAckId: string, pageCount: number = 500, page: number = 1) {\r\n        return axiosInstance\r\n            .get<GetCardsResponseType>(`cards/card?cardsPack_id=${cardsPAckId}&pageCount=${pageCount}&page=${page}`)\r\n    },\r\n    createCard(reqModel: CreateCardRequestType) {\r\n        return axiosInstance.post(`cards/card`, {card: reqModel})\r\n    },\r\n    deleteCard(id: string) {\r\n        return axiosInstance.delete(`cards/card?id=${id}`)\r\n    },\r\n    updateCard(id: string, question: string) {\r\n        return axiosInstance.put(`cards/card`, {card: {_id: id, question}})\r\n    },\r\n}\r\n\r\nexport type CreateCardRequestType = {\r\n    cardsPack_id: string\r\n    question: string\r\n    answer: string\r\n}\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype GetPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {CardType, CreateCardRequestType, packsAPI, PackType} from \"../Components/Packs/packs-api\";\r\nimport {strict} from \"assert\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\nconst InitialState: InitialStateType = {\r\n    isLoading: \"idle\",\r\n    error: null,\r\n    packs: [],\r\n    cards: [],\r\n    searchValue: '',\r\n    min: 0,\r\n    max: 100,\r\n    packsOnPage: 10,\r\n    currentPage: 1,\r\n    totalPacksCount: 0\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"SET-PACKS\":\r\n            return {...state, packs: action.packs}\r\n        case \"SET-CARDS\":\r\n            return {...state, cards: action.cards}\r\n        case \"SET-SEARCH-VALUE\":\r\n            return {...state, searchValue: action.searchValue, min: action.min, max: action.max}\r\n        case \"SET-PACKS-ON-PAGE\":\r\n            return {...state, packsOnPage: action.value}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-PACKS\":\r\n            return {...state, totalPacksCount: action.totalPacks}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nconst setErrorAC = (error: string | null) => {\r\n    return {type: \"SET-ERROR\", error} as const\r\n}\r\nconst setIsLoadingAC = (isLoading: IsLoadingValuesType) => {\r\n    return {type: \"SET-IS-LOADING\", isLoading} as const\r\n}\r\nconst setPacksAC = (packs: Array<PackType>) => {\r\n    return {type: \"SET-PACKS\", packs} as const\r\n}\r\nconst setCardsAC = (cards: Array<CardType>) => {\r\n    return {type: \"SET-CARDS\", cards} as const\r\n}\r\nexport const setSearchValueAC = (searchValue: string, min: number, max: number) => {\r\n    return {type: \"SET-SEARCH-VALUE\", searchValue, min, max} as const\r\n}\r\nexport const setPacksOnPageAC = (value: number) => {\r\n    return {type: \"SET-PACKS-ON-PAGE\", value} as const\r\n}\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {type: \"SET-CURRENT-PAGE\", currentPage} as const\r\n}\r\nconst setTotalPacksAC = (totalPacks: number) => {\r\n    return {type: \"SET-TOTAL-PACKS\", totalPacks} as const\r\n}\r\n\r\n// thunks\r\nexport const getPacksTC = () => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n\r\n    const state = getState()\r\n    const searchName = state.packs.searchValue\r\n    const min = state.packs.min\r\n    const max = state.packs.max\r\n    const packsOnPage = state.packs.packsOnPage\r\n    const currentPage = state.packs.currentPage\r\n\r\n    packsAPI.getPacks(searchName, min, max, packsOnPage, currentPage)\r\n        .then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setTotalPacksAC(res.data.cardPacksTotalCount))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const createPackTC = (title: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createPack(title)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const deletePackTC = (id: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deletePack(id)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const updatePackTC = (id: string, name: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updatePack(id, name)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const getCardsTC = (cardsPackId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCards(cardsPackId)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const createCardTC = (model: CreateCardRequestType) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createCard(model)\r\n        .then(res => {\r\n            dispatch(getCardsTC(model.cardsPack_id) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const deleteCardTC = (id: string, packId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const updateCardTC = (id: string, question: string, packId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updateCard(id, question)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionTypes =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setIsLoadingAC>\r\n    | ReturnType<typeof setSearchValueAC>\r\n    | ReturnType<typeof setPacksOnPageAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalPacksAC>\r\ntype InitialStateType = {\r\n    isLoading: IsLoadingValuesType\r\n    error: string | null\r\n    packs: Array<PackType>\r\n    cards: Array<CardType>\r\n    searchValue: string\r\n    min: number\r\n    max: number\r\n    packsOnPage: number\r\n    currentPage: number\r\n    totalPacksCount: number\r\n}\r\nexport type IsLoadingValuesType = 'loading' | 'idle'","import React, {ChangeEvent} from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange: (value:  number[]) => void\r\n    value:  number[]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n    let onChangeCallback = (e: ChangeEvent<{}>, val: number | number []) => {\r\n\r\n\r\n        onChangeRange([...(val as number[])])\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div style={{width: \"300px\", margin: \"0 auto\"}}>\r\n                <Slider\r\n                    value={value}\r\n                    onChange={onChangeCallback}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperDoubleRange from \"../../SuperComponents/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getPacksTC, setSearchValueAC} from \"../../store/packs-reducer\";\r\n\r\ntype PropsType = {}\r\n\r\nexport const Search = (props: PropsType) => {\r\n\r\n    const [min, setMin] = useState(0)\r\n    const [max, setMax] = useState(100)\r\n    const [valueSearch, setValueSearch] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmitSearch = () => {\r\n        dispatch(setSearchValueAC(valueSearch, min, max))\r\n        dispatch(getPacksTC())\r\n        // or getPacksWithParamsThunk(valueSearch, min, max)\r\n    }\r\n    const onChangeRange = (value: number[]) => {\r\n        setMin(value[0])\r\n        setMax(value[1])\r\n    }\r\n    const onChangeText = (value: string) => {\r\n        setValueSearch(value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Search\r\n            <SuperInputText onChangeText={onChangeText} value={valueSearch}/>\r\n            <SuperDoubleRange onChangeRange={onChangeRange} value={[min, max]}/>\r\n            <SuperButton onClick={onSubmitSearch}>Search</SuperButton>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './Pagination.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC, setCurrentPageAC, setPacksOnPageAC} from \"../../store/packs-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\n\r\nexport const Pagination = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const countItems = useSelector<AppRootStateType, number>(state => state.packs.packsOnPage)\r\n    const currentPage = useSelector<AppRootStateType, number>(state => state.packs.currentPage)\r\n    const totalPacksCount = useSelector<AppRootStateType, number>(state => state.packs.totalPacksCount)\r\n    const pageTotalCount = Math.ceil(totalPacksCount / countItems)\r\n    debugger\r\n\r\n    const setPackOnPageNumber = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPacksOnPageAC(Number(e.currentTarget.value)))\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n\r\n\r\n    const pages = [];\r\n    for (let i = 0; i < pageTotalCount; i++) {\r\n        const onPageClick = () => {\r\n            dispatch(setCurrentPageAC(i + 1))\r\n            dispatch(getPacksTC())\r\n        }\r\n        if (i + 1 === 1 || i + 1 === pageTotalCount) {\r\n            pages.push((\r\n                <button\r\n                    key={i + 1}\r\n                    className={currentPage === i + 1 ? style.activeButton : ''}\r\n                    onClick={onPageClick}\r\n                >\r\n                    {i + 1}\r\n                </button>\r\n            ));\r\n        }\r\n        if (i + 1 === currentPage - 3 || i + 1 === currentPage + 3) {\r\n            pages.push(` ... `)\r\n        } else if (i + 1 < currentPage - 3 || i + 1 > currentPage + 3 || i + 1 === 1 || i + 1 === pageTotalCount) {\r\n\r\n        } else {\r\n            pages.push((\r\n                <button\r\n                    key={i + 1}\r\n                    className={currentPage === i + 1 ? style.activeButton : ''}\r\n                    onClick={onPageClick}\r\n                >\r\n                    {i + 1}\r\n                </button>\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapperContainer}>\r\n            <select value={countItems} onChange={setPackOnPageNumber}>\r\n                <option value={4}>4</option>\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n            {pages}\r\n        </div>\r\n    );\r\n};","import React, {useEffect} from \"react\";\r\nimport {Table} from \"../Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {PackType} from \"./packs-api\";\r\nimport {createPackTC, deletePackTC, getPacksTC, updatePackTC} from \"../../store/packs-reducer\";\r\nimport {IsLoadingValuesType} from \"../../store/login-reducer\";\r\nimport {Search} from \"../Search/Search\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\n\r\n\r\nexport const Packs = () => {\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.packs)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.packs.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    const createPack = () => dispatch(createPackTC(\"NEW fkn PACK\"))\r\n    const deletePack = (id: string) => dispatch(deletePackTC(id))\r\n    const updatePack = (id: string) => dispatch(updatePackTC(id, 'UPDATED fkn UPDATED'))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Packs</h1>\r\n            {isLoading === \"loading\" ?\r\n                <div style={{position: \"absolute\", left: \"48%\", top: \"100px\"}}>Loading...</div>\r\n                :\r\n                null}\r\n                <Search/>\r\n            <Table\r\n                deleteItem={deletePack}\r\n                updateItem={updatePack}\r\n                createItem={createPack}\r\n                packs={packs}\r\n                fieldNames={[\"Name\", \"CardsCount\", \"Updated\", \"Add pack\"]}\r\n            />\r\n            <Pagination/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {Table} from \"../Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {CardType} from \"../Packs/packs-api\";\r\nimport {IsLoadingValuesType} from \"../../store/login-reducer\";\r\nimport {createCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../store/packs-reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ntype ParamType = {\r\n    id: string\r\n}\r\nexport const Cards = () => {\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.packs.cards)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.packs.isLoading)\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<ParamType>()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(id))\r\n    },[dispatch])\r\n\r\n    const updateCard = (cardId: string) => {\r\n        dispatch(updateCardTC(cardId, 'More difficult Question', id))\r\n    }\r\n    const deleteCard = (cardId: string) => dispatch(deleteCardTC(cardId, id))\r\n    const createCard = () => dispatch(createCardTC({\r\n        cardsPack_id: id,\r\n        question: \"Difficult Question\",\r\n        answer: \"Long Answer\"\r\n    }))\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cards</h1>\r\n            {isLoading === \"loading\" ?\r\n                <div style={{position: \"absolute\", left: \"48%\", top: \"100px\"}}>Loading...</div>\r\n                :\r\n                null }\r\n            <Table\r\n                updateItem={updateCard}\r\n                deleteItem={deleteCard}\r\n                createItem={createCard}\r\n                cards={cards}\r\n                fieldNames={[\"Question\", \"Answer\", \"Grade\", \"Add item\", \"Updated\"]}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {Test} from \"../Test/Test\";\r\nimport {Error} from \"../Error/Error\";\r\nimport {Login} from \"../Login/Login\";\r\nimport PasswordRecoveryContainer from \"../PasswordRecovery/PasswordRecoveryContainer\";\r\nimport NewPasswordEnterContainer from \"../NewPasswordEnter/NewPasswordEnterContainer\";\r\nimport {Packs} from \"../Packs/Packs\";\r\nimport {Cards} from \"../Cards/Cards\";\r\n\r\nexport const ROUTE = {\r\n    LOGIN: '/login',\r\n    TEST: '/test',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PAS_RECOVERY: '/pas-recovery',\r\n    PAS_ENTER: '/pas-enter/:token',\r\n    ERROR: '/404',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:id'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path={\"/\"} exact render={() => <Redirect to={ROUTE.TEST}/>}/>\r\n                    <Route path={ROUTE.LOGIN} render={() => <Login/>}/>\r\n                    <Route path={ROUTE.REGISTRATION} render={() => <Registration/>}/>\r\n                    <Route path={ROUTE.PROFILE} render={() => <Profile/>}/>\r\n                    <Route path={ROUTE.PAS_RECOVERY} render={() => <PasswordRecoveryContainer/>}/>\r\n                    <Route path={ROUTE.PAS_ENTER} render={() => <NewPasswordEnterContainer/>}/>\r\n                    <Route path={ROUTE.TEST} render={() => <Test/>}/>\r\n                    <Route path={ROUTE.ERROR} render={() => <Error/>}/>\r\n                    <Route path={ROUTE.PACKS} render={() => <Packs/>}/>\r\n                    <Route path={ROUTE.CARDS} render={() => <Cards/>}/>\r\n                    <Redirect from={'*'} to={ROUTE.ERROR}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ROUTE} from \"../Routes/Routes\";\r\nimport s from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <ul className={s.list}>\r\n                <li><NavLink className={s.link} to={ROUTE.LOGIN}>LOGIN</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.REGISTRATION}>REGISTRATION</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PROFILE}>PROFILE</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PAS_RECOVERY}>FORGOT</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.TEST}>TEST</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PACKS}>PACKS</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.CARDS}>CARDS</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './App.css';\r\nimport {Header} from './Components/Header/Header';\r\nimport {Routes} from './Components/Routes/Routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\n\r\nconst InitialState = {}\r\n\r\nexport const profileReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionTypes = any\r\ntype InitialStateType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {recoveryPassReducer} from \"./recoveryPass-reducer\";\r\nimport {enterNewPassReducer} from \"./enterNewPass-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {packsReducer} from \"./packs-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoveryPass: recoveryPassReducer,\r\n    enterNewPass: enterNewPassReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n            <App/>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}