{"version":3,"sources":["Components/Table/Table.module.css","Components/LearnPage/LearnPage.module.css","Components/Header/Header.module.css","SuperComponents/c4-SuperEditableSpan/SuperEditableSpan.module.css","SuperComponents/c1-SuperInputText/SuperInputText.module.css","Components/PasswordRecovery/PasswordRecovery.module.css","Components/Modals/Modal.module.css","Components/Pagination/Pagination.module.css","SuperComponents/c2-SuperButton/SuperButton.module.css","SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","SuperComponents/c6-SuperRadio/SuperRadio.module.css","SuperComponents/c5-SuperSelect/SuperSelect.module.css","SuperComponents/c7-SuperRange/SuperRange.module.css","Components/Login/Login.module.css","SuperComponents/c1-SuperInputText/SuperInputText.tsx","SuperComponents/c2-SuperButton/SuperButton.tsx","Components/Registration/registration-API.ts","store/registration-reducer.ts","Components/Registration/Registration.tsx","Components/Profile/Profile.tsx","SuperComponents/c6-SuperRadio/SuperRadio.tsx","SuperComponents/c5-SuperSelect/SuperSelect.tsx","SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","SuperComponents/c4-SuperEditableSpan/SuperEditableSpan.tsx","SuperComponents/c7-SuperRange/SuperRange.tsx","Components/Test/Test.tsx","Components/Error/Error.tsx","Components/Login/loginAPI.ts","store/login-reducer.ts","Components/Login/Login.tsx","Components/PasswordRecovery/recoveryPassAPI.ts","store/recoveryPass-reducer.ts","Components/PasswordRecovery/PasswordRecoveryContainer.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/NewPasswordEnter/enterNewPassAPI.ts","store/enterNewPass-reducer.ts","Components/NewPasswordEnter/NewPasswordEnterContainer.tsx","Components/NewPasswordEnter/NewPasswordEnter.tsx","Components/Modals/Modal.tsx","Components/Table/TableHeader/TableHeader.tsx","Components/Table/Table.tsx","Components/Packs/packs-api.ts","store/packs-reducer.ts","SuperComponents/c8-SuperDoubleRange/SuperDoubleRange.tsx","Components/Search/Search.tsx","Components/Pagination/Pagination.tsx","Components/Table/TableItem/TableItem.tsx","Components/Packs/Packs.tsx","Components/Cards/Cards.tsx","Components/LearnPage/LearnPage.tsx","Components/Routes/Routes.tsx","Components/Header/Header.tsx","App.tsx","reportWebVitals.ts","store/profile-reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","registerAPI","data","post","InitialState","isNewUser","Registration","useState","email","password","repeatPassword","setData","dispatch","useDispatch","onChangeHandler","fieldName","target","name","useSelector","state","registration","to","style","margin","placeholder","onClick","then","res","console","log","isRegistered","catch","err","alert","registerUserTC","Profile","SuperRadio","options","onChangeOption","mappedOptions","map","o","i","input","checked","SuperSelect","op","select","SuperCheckbox","onChangeChecked","children","checkbox","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","onMouseEnter","setOnMouseEnter","spanStyle","onMouseLeave","message","doubleClick","divForSpan","SuperRange","onChangeRange","finalRangeClassName","range","Test","marginBottom","Error","axiosInstance","loginAPI","isLoggedIn","isLoading","setIsLoggedInAC","setErrorAC","setIsLoadingAC","Login","setEmail","setPassword","rememberMe","setRememberMe","validateError","setValidateError","login","loginForm","disabled","response","recoveryPassAPI","from","FORGOT_PASS","CHANGE_EMAIL","EMAIL_SENDED","emailSended","PasswordRecoveryContainer","connect","recoveryPass","sendRecoveryMess","addUserEmail","userEmailAC","container","htmlFor","id","title","button","enterNewPassAPI","resetPasswordToken","CHANGE_PASSWORD","SET_ERROR","SEND_NEW_PASS_SUCCES","newPassword","succes","enterNewPass","changePassword","sendNewPassword","token","setError","props","useParams","ROUTE","LOGIN","Modal","modalStyles","top","height","left","width","CSSStyles","backgroundDiv","bgOnClick","modalWindow","buttonsStyle","TableHeader","fieldNames","createItem","displayModal","setDisplayModal","setValue","value2","setValue2","tableItem","tableHeader","display","justifyContent","marginTop","Table","table","packsAPI","packName","min","max","pageCount","page","get","cardsPack","delete","put","_id","cardsPAckId","reqModel","card","question","answer","grade","packs","cards","searchValue","packsOnPage","currentPage","totalPacksCount","showSuccessModal","setShowSuccessModalAC","show","getPacksTC","getState","searchName","cardPacks","totalPacks","cardPacksTotalCount","getCardsTC","cardsPackId","SuperDoubleRange","Slider","val","valueLabelDisplay","aria-labelledby","Search","setMin","setMax","valueSearch","setValueSearch","setSearchValueAC","Pagination","countItems","pageTotalCount","Math","ceil","pages","onPageClick","setCurrentPageAC","push","activeButton","wrapperContainer","Number","TableItem","packItem","cardItem","displayDeleteModal","setDisplayDeleteModal","displayUpdateModal","setDisplayUpdateModal","value1","setValue1","item","children1","updated","buttonsDiv","children2","deleteItem","updateItem","Packs","useEffect","deletePack","deletePackTC","updatePack","newTitle","updatePackTC","position","setTimeout","createPackTC","p","cardsCount","backgroundColor","Cards","updateCard","cardId","packId","updateCardTC","deleteCard","deleteCardTC","model","cardsPack_id","LearnPage","checkMode","setCheckMode","numberCurrentCard","setNumberCurrentCard","addGrade","updateCardGradeTC","sortCards","gradeArr","index","chance","random","currentInd","maxVal","forEach","el","text","TEST","REGISTRATION","PROFILE","PAS_RECOVERY","PAS_ENTER","ERROR","PACKS","CARDS","LEARN_PAGE","Routes","path","exact","render","NewPasswordEnterContainer","Header","list","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,2BAA2B,WAAa,4B,mBCA1ID,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,4B,mBCAnGD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,uB,mBCArDD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,WAAa,sCAAsC,YAAc,uCAAuC,QAAU,mCAAmC,UAAY,uC,mBCApOD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,MAAQ,gCAAgC,UAAY,oCAAoC,OAAS,mC,mBCAnHD,EAAOC,QAAU,CAAC,YAAc,2BAA2B,aAAe,4BAA4B,cAAgB,+B,mBCAtHD,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,aAAe,mC,mBCAzFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,OAAS,2BAA2B,MAAQ,4B,mBCA9DD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,MAAQ,6B,mBCA/DD,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,UAAY,2B,uMCyDfC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IACnEI,EAAmB,UAAML,EAAN,YAAmBD,EAAQK,IAAEE,WAAaF,IAAEG,YAErE,OACI,qCACI,mCACIb,KAAM,OACNC,SArBa,SAACa,GACtBb,GACGA,EAASa,GAEZZ,GAAgBA,EAAaY,EAAEC,cAAcC,QAkBrCb,WAhBe,SAACW,GACxBX,GAAcA,EAAWW,GAEf,UAAVA,EAAEG,KACCb,GACAA,KAYKE,UAAWK,GAEPH,IAEPH,GAAS,sBAAMC,UAAWG,EAAjB,SAAsCJ,Q,iBC3B7Ca,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKb,EAGR,EAHQA,UACFE,EAEN,mCACKY,EAAc,UAAMD,EAAMT,IAAES,IAAMT,IAAEW,QAAtB,YAAiCf,GAErD,OACI,oCACIA,UAAWc,GACPZ,K,iBClBHc,EAAWC,IAAMC,OAAO,CACjCC,QAAS,uCAETC,iBAAiB,IAGRC,EAAc,SACdC,GACL,OAAON,EAASO,KAA+C,iBAAkBD,ICNnFE,EAAiC,CACnCC,WAAW,GCGFC,EAAe,WAAO,IAAD,EACNC,mBAA+B,CACnDC,MAAO,GACPC,SAAU,GACVC,eAAgB,KAJU,mBACvBR,EADuB,KACjBS,EADiB,KAMxBC,EAAWC,cAGXC,EAAkB,SAAC1B,GACrB,IAAM2B,EAAY3B,EAAE4B,OAAOC,KAC3B,IAAK,IAAI1B,KAAOW,EACRX,IAAQwB,GACRJ,EAAQ,2BAAIT,GAAL,kBAAYX,EAAMH,EAAEC,cAAcC,UAUrD,OAhBkB4B,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,aAAaf,aAiB1E,cAAC,IAAD,CAAUgB,GAAI,WAIrB,gCACI,8CACA,qBAAKC,MAAO,CAACC,OAAQ,OAArB,SACI,cAAC,EAAD,CAAgBC,YAAa,QACbP,KAAM,QACN3B,MAAOY,EAAKM,MACZjC,SAAUuC,MAG9B,qBAAKQ,MAAO,CAACC,OAAQ,OAArB,SACI,cAAC,EAAD,CAAgBC,YAAa,WACbP,KAAM,WACN3B,MAAOY,EAAKO,SACZlC,SAAUuC,MAG9B,qBAAKQ,MAAO,CAACC,OAAQ,OAArB,SACI,cAAC,EAAD,CAAgBC,YAAa,kBACbP,KAAM,iBACN3B,MAAOY,EAAKQ,eACZnC,SAAUuC,MAG9B,qBAAKQ,MAAO,CAACC,OAAQ,OAArB,SACI,cAAC,EAAD,CAAaE,QAnCI,WACzBvB,EAAKO,WAAaP,EAAKQ,gBACpBE,EDNmB,SAACV,GAAD,OAAgC,SAACU,GAC3DX,EAAqBC,GAChBwB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZf,EARmD,CAACtC,KAAM,2BAA4BwD,cAQzD,OAEhCC,OAAM,SAAAC,GACHC,MAAMD,OCDEE,CAAe,CAAC1B,MAAON,EAAKM,MAAOC,SAAUP,EAAKO,YAC9DE,EAAQ,CAACH,MAAO,GAAIC,SAAU,GAAIC,eAAgB,MAgC1C,4BC1DHyB,EAAU,WAGnB,OACI,8BACI,4C,iBCyCGC,EAvCmC,SAAC,GAO9C,EALG9D,KAKF,IALQ2C,EAKT,EALSA,KACNoB,EAIH,EAJGA,QAAS/C,EAIZ,EAJYA,MACCgD,GAGb,EAHG/D,SAGH,EAHa+D,gBAMRC,GAHL,6EAG4BF,EAAUA,EAAQG,KAAI,SAACC,EAAGC,GAQnD,OAAO,kCACH,uBACI9D,UAAWI,IAAE2D,MACbrE,KAAM,QACN2C,KAAMA,EACN2B,QAAStD,IAAUmD,EACnBnD,MAAOA,EACPf,SAdiB,SAACa,GAElBkD,GACAA,EAAeG,MAclBA,IAVcxB,EAAO,IAAMyB,MAY/B,IAEL,OACI,mCACKH,K,iBCXEM,EAvBqC,SAAC,GAM/C,IAJER,EAIH,EAJGA,QACUC,GAGb,EAHG/D,SAGH,EAHa+D,gBACPxD,EAEN,uDACKyD,EAAa,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAASG,KAAI,SAACM,EAAGJ,GAAJ,OAAU,iCAAiBI,GAAJJ,MAS1D,OACI,gDAAQ9D,UAAWI,IAAE+D,OAAQxE,SARR,SAACa,GAElBkD,GACAA,EAAelD,EAAEC,cAAcC,SAK0BR,GAA7D,aACKyD,M,iBCcES,EA/ByC,SAAC,GASpD,EAPG1E,KAOF,IANEC,EAMH,EANGA,SAAU0E,EAMb,EANaA,gBACVrE,EAKH,EALGA,UACAsE,GAIH,EALcrE,cAKd,EAJGqE,UAEGpE,EAEN,4FAMKG,EAAmB,UAAMD,IAAEmE,SAAR,YAAoBvE,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNC,SAXa,SAACa,GACtB6D,GAAmBA,EAAgB7D,EAAEC,cAAcuD,SACnDrE,GAAYA,EAASa,IAUbR,UAAWK,GAEPH,IAEPoE,GAAY,sBAAMtE,UAAWI,IAAEH,cAAnB,SAAmCqE,Q,iBCmD7CE,EApE4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACA5E,EAKH,EALGA,QACA6E,EAIH,EAJGA,UAEGzE,EAEN,8DAC+ByB,oBAAkB,GADjD,mBACMiD,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEL,EAFN,EAEMA,SAAUQ,EAFhB,EAEgBA,cAAe9E,EAF/B,EAE+BA,UAAc+E,EAF7C,0DAGuCpD,oBAAkB,GAHzD,mBAGMqD,EAHN,KAGoBC,EAHpB,KAqBKhF,EAAa,UAAMG,IAAE8E,UAAR,YAAqBlF,GAExC,OACI,mCACK4E,EAEO,gCAAK,cAAC,EAAD,aACDH,WAAS,EACTC,OAnBG,SAAClE,GAEpBqE,GAAY,GACZH,GAAUA,EAAOlE,IAiBDV,QAzBI,WAEpB+E,GAAY,GACZ/E,GAAWA,KAuBKkF,aAAc,kBAAMC,GAAgB,IACpCE,aAAc,kBAAMF,GAAgB,KAEhC/E,IAEJ,qBAAKF,UAAWgF,EAAe5E,IAAEgF,QAAUhF,IAAEiF,YAA7C,wCAGJ,sBAAKrF,UAAWI,IAAEkF,WAAlB,UACA,8CACIR,cA1BU,SAACtE,GAE3BqE,GAAY,GACZC,GAAiBA,EAActE,IAwBfR,UAAWC,EACX+E,aAAc,kBAAMC,GAAgB,IACpCE,aAAc,kBAAMF,GAAgB,KAEhCF,GANR,aASKT,GAAYpE,EAAUQ,SAEvB,qBAAKV,UAAWgF,EAAe5E,IAAEgF,QAAUhF,IAAEiF,YAA7C,2C,iBCrCTE,EA/BmC,SAAC,GAQ9C,EANG7F,KAMF,IALEC,EAKH,EALGA,SAAU6F,EAKb,EALaA,cACVxF,EAIH,EAJGA,UAAWU,EAId,EAJcA,MAERR,EAEN,uEAOKuF,EAAmB,UAAMrF,IAAEsF,MAAR,YAAiB1F,GAAwB,IAElE,OACI,mCACI,mCACIU,MAAOA,EACPhB,KAAM,QACNC,SAba,SAACa,GACtBb,GAAYA,EAASa,GAErBgF,GAAiBA,GAAehF,EAAEC,cAAcC,QAWxCV,UAAWyF,GAEPvF,OC3BPyF,EAAO,WAChB,OACI,gCACI,sCACA,gCACI,qBAAKjD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,MACpC,qBAAKlD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,uBACpC,qBAAKlD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,MACpC,qBAAKlD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,MACpC,qBAAKlD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,MACpC,qBAAKlD,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,CAAmBlF,MAAO,oBAC9D,qBAAKgC,MAAO,CAACkD,aAAc,QAA3B,SAAoC,cAAC,EAAD,aClBvCC,EAAQ,WACjB,OACI,8BACI,wC,iBCJCC,EAAgB7E,IAAMC,OAAO,CACtCC,QAAS,uCAETC,iBAAiB,IAGR2E,EAAW,SACdzE,GACD,OAAOwE,EAAcvE,KAAK,aAAcD,ICP3CE,EAAiC,CACnCwE,YAAY,EACZjG,MAAO,KACPkG,UAAW,QAiBTC,EAAkB,SAACF,GACrB,MAAO,CAACtG,KAAM,mBAAoBsG,eAEhCG,EAAa,SAACpG,GAChB,MAAO,CAACL,KAAM,YAAaK,UAEzBqG,EAAiB,SAACH,GACpB,MAAO,CAACvG,KAAM,iBAAkBuG,cCnBvBI,EAAQ,WAAO,IAAD,EACC1E,mBAAS,IADV,mBAClBC,EADkB,KACX0E,EADW,OAEO3E,mBAAS,IAFhB,mBAElBE,EAFkB,KAER0E,EAFQ,OAGW5E,oBAAS,GAHpB,mBAGlB6E,EAHkB,KAGNC,EAHM,OAIiB9E,mBAAwB,MAJzC,mBAIlB+E,EAJkB,KAIHC,EAJG,KAKjB3E,EAAWC,cACX+D,EAAa1D,aAAuC,SAAAC,GAAK,OAAIA,EAAMqE,MAAMZ,cACzEjG,EAAQuC,aAA6C,SAAAC,GAAK,OAAIA,EAAMqE,MAAM7G,SAC1EkG,EAAY3D,aAAmD,SAAAC,GAAK,OAAIA,EAAMqE,MAAMX,aAapFpG,EAAa,WACK,MAAjB6G,GACCC,EAAiB,OAIzB,OAAGX,EACQ,cAAC,IAAD,CAAUvD,GAAI,aAIrB,gCACI,uCACe,YAAdwD,EAA0B,6CAAwB,KACnD,sBAAKjG,UAAWI,IAAEyG,UAAlB,UACI,cAAC,EAAD,CAAgBjE,YAAa,QAASlD,KAAM,QAASgB,MAAOkB,EAAO/B,WAAYA,EAAYF,SA1BjF,SAACa,GAAD,OAAsC8F,EAAS9F,EAAEC,cAAcC,UA2BzE,cAAC,EAAD,CAAgBkC,YAAa,WAAYlD,KAAK,WAAWgB,MAAOmB,EAAUhC,WAAYA,EAAYF,SA1BrF,SAACa,GAAD,OAAsC+F,EAAY/F,EAAEC,cAAcC,UA2B/E,cAAC,EAAD,CAAehB,KAAK,WAAWsE,QAASwC,EAAY7G,SA1BrC,SAACa,GAAD,OAAsCiG,EAAcjG,EAAEC,cAAcuD,YA2BnF,cAAC,EAAD,CAAa8C,SAAwB,YAAdb,EAAwCpD,QAzBtD,WDSF,IAACvB,ECRH,KAAVM,GAA6B,KAAbC,EAInBG,GDIgBV,ECJC,CAACM,QAAOC,WAAU2E,cDIQ,SAACxE,GAChDA,EAASoE,EAAe,YACxBL,EAAezE,GACVwB,MAAK,SAAAC,GACFf,EAASkE,GAAgB,IACzBlE,EAASmE,EAAW,OACpBnE,EAASoE,EAAe,YAE3BjD,OAAM,SAAAC,GACAA,EAAI2D,SACH/E,EAASmE,EAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,EAAW,eAExBnE,EAASoE,EAAe,eCrBxBO,EAAiB,+BAuBb,uBAEH5G,EAAQ,8BAAMA,IAAe,KAC7B2G,EAAgB,8BAAMA,IAAuB,SClDpD1F,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAKR4F,GAAkB,SAEjBpF,GACP,OAAOZ,EAASO,KAAK,cAChB,CACIK,QACAqF,KAAM,cACN7B,QAAS,uKCfnB8B,GAAc,cACdC,GAAe,eACfC,GAAe,eAqDf5F,GAAe,CACjBzB,MAAO,GACP6B,MAAO,GACPyF,aAAa,G,oBC5CFC,GAFmBC,aART,SAAChF,GAAD,MAA8B,CACpDxC,MAAOwC,EAAMiF,aAAazH,MAC1B6B,MAAOW,EAAMiF,aAAa5F,MAC1ByF,YAAa9E,EAAMiF,aAAaH,eAKuB,CAACI,iBD8B3B,SAAC7F,GAAD,OAAmB,SAACI,GAEhDgF,GAA0BpF,GAAOkB,MAAK,SAAAC,GAClCf,EATG,CACHtC,KAAM0H,GACNC,aAOqB,OACrBlE,OAAM,SAAAC,GAzBc,IAACrD,EA0BrBiC,GA1BqBjC,EA0BCqD,EAAI2D,SAASzF,KAAKvB,MAzBrC,CACHL,KAAMwH,GACNnH,gBCZqE2H,aDuCjD,SAAC9F,GAAD,OAAmB,SAACI,GAC5CA,EAxBuB,SAACJ,GACxB,MAAO,CACHlC,KAAMyH,GACNvF,SAqBK+F,CAAY/F,OCxCS2F,ECD8B,SAAC,GAAiE,IAAhExH,EAA+D,EAA/DA,MAAO6B,EAAwD,EAAxDA,MAAOyF,EAAiD,EAAjDA,YAAaI,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,aAW7G,OAAGL,IAAgBtH,EACV,cAAC,IAAD,CAAU0C,GAAI,qBAIrB,gCACE,kDACA,sBAAKzC,UAAa0C,KAAMkF,UAAxB,UACG7H,GAAS,mBAAGC,UAAa0C,KAAM3C,MAAtB,SAA8BA,IACxC,uBAAO8H,QAAQ,QAAf,8BACA,uBAAOlI,SAnBI,SAACa,GAChBA,EAAEC,cAAcC,OAAUgH,EAAalH,EAAEC,cAAcC,QAkBxBoH,GAAG,QAAQpI,KAAK,QAAQqI,MAAM,UACzD,wBAAQ/H,UAAa0C,KAAMsF,OAAQnF,QAfvB,WAChB4E,EAAiB7F,IAcb,2BCjCFZ,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAKR6G,GAAkB,SAEfpG,EAAkBqG,GAC3B,OAAOlH,GAASO,KAAK,wBAChB,CACIM,WACAqG,wBCbVC,GAAkB,kBAClBC,GAAY,YACZC,GAAuB,uBAgCvB7G,GAAe,CACjB8G,YAAY,GACZvI,MAAO,GACPwI,QAAQ,GC1BGhB,gBATS,SAAChF,GACrB,MAAO,CACH+F,YAAa/F,EAAMiG,aAAaF,YAChCvI,MAAOwC,EAAMiG,aAAazI,MAC1BwI,OAAQhG,EAAMiG,aAAaD,UAKK,CAACE,eDAX,SAAC5G,GAC3B,MAAO,CACHnC,KAAMyI,GACNtG,aCHgD6G,gBDczB,SAACJ,EAAqBK,GAAtB,OAAwC,SAAC3G,GAChEiG,GAA4BK,EAAYK,GAAO7F,MAAK,SAAAC,GAChDf,EARD,CACHtC,KAAM2I,GACNE,QAM8B,OAC3BpF,OAAM,SAAApD,GACLiC,EAzBY,SAACjC,GACrB,MAAO,CACHL,KAAM0I,GACNrI,SAsBa6I,CAAS7I,EAAMgH,SAASzF,KAAKvB,cClBnCwH,ECEiB,SAACsB,GAAgC,IAE1DF,EAASG,cAATH,MAUL,OAAGE,EAAMN,OACA,cAAC,IAAD,CAAU9F,GAAKsG,GAAMC,QAI5B,gCACE,2DACCH,EAAM9I,OAAS8I,EAAM9I,MACtB,gCACE,uBAAO8H,QAAQ,WAAf,gCACA,uBAAOlI,SAlBW,SAACa,GACvBqI,EAAMJ,eAAejI,EAAEC,cAAcC,QAiBCA,MAAOmI,EAAMP,YAAaR,GAAG,WAAWpI,KAAK,aAC/E,wBAAQmD,QAfQ,WACpBgG,EAAMH,gBAAgBG,EAAMP,YAAaK,IAcrC,2B,wCC5BKM,GAAkC,SAACJ,GAE5C,IAAMK,EAAW,aACbC,IAAI,eAAD,OAAiBN,EAAMO,OAAS,EAAhC,OACHC,KAAK,eAAD,OAAiBR,EAAMS,MAAQ,EAA/B,OACJA,MAAOT,EAAMS,MACbF,OAAQP,EAAMO,QACXP,EAAMU,WAGb,OACI,qCACKV,EAAMW,eAAiB,qBAAK3G,QAASgG,EAAMY,UAAWzJ,UAAWI,KAAEoJ,gBACpE,sBAAKxJ,UAAWI,KAAEsJ,YAAahH,MAAOwG,EAAtC,UACI,6BAAKL,EAAMd,QACX,qBAAK/H,UAAWI,KAAEuJ,aAAlB,SAAiCd,EAAMvE,kBClB1CsF,GAAc,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,WAAqC,EACpCnI,oBAAS,GAD2B,mBACrEoI,EADqE,KACvDC,EADuD,OAElDrI,mBAAS,IAFyC,mBAErEjB,EAFqE,KAE9DuJ,EAF8D,OAGhDtI,mBAAS,IAHuC,mBAGrEuI,EAHqE,KAG7DC,EAH6D,KAY1E,OACI,qCACI,sBAAKnK,UAAS,UAAKI,KAAEgK,UAAP,YAAoBhK,KAAEiK,aAApC,UACI,8BAAMR,EAAW,KACjB,8BAAMA,EAAW,KACjB,8BAAMA,EAAW,KAChBA,EAAW,IAAM,8BAAMA,EAAW,KACnC,gCACKA,EAAW,GADhB,KACqB,cAAC,EAAD,CAAahH,QAAS,kBAAMmH,GAAgB,IAA5C,uBAGxBD,GAAgB,eAAC,GAAD,CAAON,UAAW,kBAAMO,GAAgB,IAAQjC,MAAO,qBAAsBuB,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAArH,UACb,uBACI9J,KAAK,OACLgB,MAAOA,EACPf,SAAU,SAACa,GAAD,OAAOyJ,EAASzJ,EAAEC,cAAcC,UAG1CmJ,EAAW,IACX,uBACInK,KAAK,OACLgB,MAAOwJ,EACPvK,SAAU,SAACa,GAAD,OAAO2J,EAAU3J,EAAEC,cAAcC,UAEnD,sBAAKgC,MAAO,CAAC4H,QAAS,OAAQC,eAAgB,eAAgBC,UAAW,QAAzE,UACI,cAAC,EAAD,CAAa3H,QAhCP,WAClBiH,EAAWpJ,EAAOmJ,EAAW,IAAMK,GACnCF,GAAgB,GAChBC,EAAS,IACK,KAAXC,GAAeC,EAAU,KA4BhB,oBACA,cAAC,EAAD,CAAatH,QAAS,kBAAMmH,GAAgB,IAA5C,8BCnCPS,GAAkC,SAAC5B,GAE5C,OACI,sBAAK7I,UAAWI,KAAEsK,MAAlB,UACI,cAAC,GAAD,CAAab,WAAYhB,EAAMgB,WAAYC,WAAYjB,EAAMiB,aAC7D,8BAmBKjB,EAAMvE,eClCVwB,GAAgB7E,IAAMC,OAAO,CACtCC,QAAS,uCAETC,iBAAiB,IAGRuJ,GAAW,SACXC,EAAkBC,EAAaC,GAAwD,IAA3CC,EAA0C,uDAAtB,GAAIC,EAAkB,uDAAH,EACxF,OAAOlF,GACFmF,IADE,+BACgDF,EADhD,iBACkEC,EADlE,qBACmFJ,EADnF,gBACmGC,EADnG,gBAC8GC,KAHhHH,GAAW,SAKT5C,GACP,OAAOjC,GAAcvE,KAAd,aAAiC,CAAC2J,UAAW,CAAC7I,KAAM0F,MANtD4C,GAAW,SAQT7C,GACP,OAAOhC,GAAcqF,OAAd,wBAAsCrD,KATxC6C,GAAW,SAWT7C,EAAYzF,GACnB,OAAOyD,GAAcsF,IAAd,aAAgC,CAACF,UAAW,CAACG,IAAKvD,EAAIzF,WAZxDsI,GAAW,SAcXW,GAAiE,IAA5CP,EAA2C,uDAAvB,IAAKC,EAAkB,uDAAH,EAClE,OAAOlF,GACFmF,IADE,kCACmDK,EADnD,sBAC4EP,EAD5E,iBAC8FC,KAhBhGL,GAAW,SAkBTY,GACP,OAAOzF,GAAcvE,KAAd,aAAiC,CAACiK,KAAMD,KAnB1CZ,GAAW,SAqBT7C,GACP,OAAOhC,GAAcqF,OAAd,wBAAsCrD,KAtBxC6C,GAAW,SAwBT7C,EAAY2D,EAAkBC,GACrC,OAAO5F,GAAcsF,IAAd,aAAgC,CAACI,KAAM,CAACH,IAAKvD,EAAI2D,WAAUC,aAzB7Df,GAAW,SA2BJ7C,EAAY6D,GACxB,OAAO7F,GAAcsF,IAAd,aAAgC,CAACI,KAAM,CAACH,IAAKvD,EAAI6D,YC/B1DnK,GAAiC,CACnCyE,UAAW,OACXlG,MAAO,KACP6L,MAAO,GACPC,MAAO,GACPC,YAAa,GACbjB,IAAK,EACLC,IAAK,IACLiB,YAAa,GACbC,YAAa,EACbC,gBAAiB,EACjBC,kBAAkB,GA6BhB/F,GAAa,SAACpG,GAChB,MAAO,CAACL,KAAM,YAAaK,UAEzBqG,GAAiB,SAACH,GACpB,MAAO,CAACvG,KAAM,iBAAkBuG,cAoBvBkG,GAAwB,SAACC,GAClC,MAAO,CAAC1M,KAAM,yBAA0B0M,SAI/BC,GAAa,kBAAM,SAACrK,EAAoBsK,GACjDtK,EAASoE,GAAe,YAExB,IAAM7D,EAAQ+J,IACRC,EAAahK,EAAMqJ,MAAME,YACzBjB,EAAMtI,EAAMqJ,MAAMf,IAClBC,EAAMvI,EAAMqJ,MAAMd,IAClBiB,EAAcxJ,EAAMqJ,MAAMG,YAC1BC,EAAczJ,EAAMqJ,MAAMI,YAEhCrB,GAAkB4B,EAAY1B,EAAKC,EAAKiB,EAAaC,GAChDlJ,MAAK,SAAAC,GACFf,EAlCD,CAACtC,KAAM,YAAakM,MAkCC7I,EAAIzB,KAAKkL,YAC7BxK,EAASoE,GAAe,SACxBpE,EArBD,CAACtC,KAAM,kBAAmB+M,WAqBA1J,EAAIzB,KAAKoL,yBAErCvJ,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,cAwDvBuG,GAAa,SAACC,GAAD,OAAyB,SAAC5K,GAChDA,EAASoE,GAAe,YACxBuE,GAAkBiC,GACb9J,MAAK,SAAAC,GACFf,EArGD,CAACtC,KAAM,YAAamM,MAqGC9I,EAAIzB,KAAKuK,QAC7B7J,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,c,mBChIrByG,GA5B+C,SAAC,GAKzD,IAHErH,EAGH,EAHGA,cAAe9E,EAGlB,EAHkBA,MAWnB,OACI,mCAEI,qBAAKgC,MAAO,CAAC4G,MAAO,QAAS3G,OAAQ,UAArC,SACI,cAACmK,GAAA,EAAD,CACIpM,MAAOA,EACPf,SAZO,SAACa,EAAoBuM,GAGxCvH,EAAc,aAAKuH,KAUPC,kBAAkB,OAClBC,kBAAgB,sBCrBvBC,GAAS,SAACrE,GAAsB,IAAD,EAElBlH,mBAAS,GAFS,mBAEjCkJ,EAFiC,KAE5BsC,EAF4B,OAGlBxL,mBAAS,KAHS,mBAGjCmJ,EAHiC,KAG5BsC,EAH4B,OAIFzL,mBAAS,IAJP,mBAIjC0L,EAJiC,KAIpBC,EAJoB,KAMlCtL,EAAWC,cAejB,OACI,yCAEI,cAAC,EAAD,CAAgBrC,aAPH,SAACc,GAClB4M,EAAe5M,IAMiCA,MAAO2M,IACnD,cAAC,GAAD,CAAkB7H,cAZJ,SAAC9E,GACnByM,EAAOzM,EAAM,IACb0M,EAAO1M,EAAM,KAUuCA,MAAO,CAACmK,EAAKC,KAC7D,cAAC,EAAD,CAAajI,QAlBE,WACnBb,EFuCwB,SAAC8J,EAAqBjB,EAAaC,GAC/D,MAAO,CAACpL,KAAM,mBAAoBoM,cAAajB,MAAKC,OExCvCyC,CAAiBF,EAAaxC,EAAKC,IAC5C9I,EAASqK,OAgBL,wB,oBC3BCmB,GAAa,WAiBtB,IAfA,IAAMxL,EAAWC,cACXwL,EAAanL,aAAsC,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMG,eACxEC,EAAc1J,aAAsC,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMI,eACzEC,EAAkB3J,aAAsC,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMK,mBAC7EyB,EAAiBC,KAAKC,KAAK3B,EAAkBwB,GAU7CI,EAAQ,GAhBc,WAiBnB/J,GACL,IAAMgK,EAAc,WAChB9L,EHoCoB,SAACgK,GAC7B,MAAO,CAACtM,KAAM,mBAAoBsM,eGrCjB+B,CAAiBjK,EAAI,IAC9B9B,EAASqK,OAETvI,EAAI,IAAM,GAAKA,EAAI,IAAM4J,GACzBG,EAAMG,KACF,wBAEIhO,UAAWgM,IAAgBlI,EAAI,EAAIpB,KAAMuL,aAAe,GACxDpL,QAASiL,EAHb,SAKKhK,EAAI,GAJAA,EAAI,IAQjBA,EAAI,IAAMkI,EAAc,GAAKlI,EAAI,IAAMkI,EAAc,EACrD6B,EAAMG,KAAN,SACOlK,EAAI,EAAIkI,EAAc,GAAKlI,EAAI,EAAIkI,EAAc,GAAKlI,EAAI,IAAM,GAAKA,EAAI,IAAM4J,GAGtFG,EAAMG,KACF,wBAEIhO,UAAWgM,IAAgBlI,EAAI,EAAIpB,KAAMuL,aAAe,GACxDpL,QAASiL,EAHb,SAKKhK,EAAI,GAJAA,EAAI,KAvBhBA,EAAI,EAAGA,EAAI4J,EAAgB5J,IAAM,EAAjCA,GAiCT,OACI,sBAAK9D,UAAW0C,KAAMwL,iBAAtB,UACI,yBAAQxN,MAAO+M,EAAY9N,SA3CP,SAACa,GACzBwB,EH2CG,CAACtC,KAAM,oBAAqBgB,MG3CLyN,OAAO3N,EAAEC,cAAcC,SACjDsB,EAASqK,OAyCL,UACI,wBAAQ3L,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,mBAEHmN,MCrDAO,GAAY,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAAazF,EAA+B,yCAC3BlH,oBAAS,GADkB,mBACxE4M,EADwE,KACpDC,EADoD,OAE3B7M,oBAAS,GAFkB,mBAExE8M,EAFwE,KAEpDC,EAFoD,OAGnD/M,mBAAS,IAH0C,mBAGxEgN,EAHwE,KAGhEC,EAHgE,OAInDjN,mBAAS,IAJ0C,mBAIxEuI,EAJwE,KAIhEC,EAJgE,KAKvE0E,EAAOR,GAAsBC,EAanC,OACI,gCACKD,EACG,sBAAKrO,UAAWI,KAAEgK,UAAlB,UACKvB,EAAMiG,UACP,8BAAMT,EAASU,UACf,sBAAK/O,UAAWI,KAAE4O,WAAlB,UACI,cAAC,EAAD,CAAanM,QAAS,kBAAM2L,GAAsB,IAAlD,oBACA,cAAC,EAAD,CAAa3L,QAAS,kBAAM6L,GAAsB,IAAlD,oBACC7F,EAAMoG,gBAIf,sBAAKjP,UAAWI,KAAEgK,UAAlB,UACKvB,EAAMiG,UACP,8BAAMR,GAAYA,EAASS,UAC3B,sBAAK/O,UAAWI,KAAE4O,WAAlB,UACI,cAAC,EAAD,CACInM,QAAS,kBAAM2L,GAAsB,IADzC,oBAEA,cAAC,EAAD,CAAa3L,QAAS,kBAAM6L,GAAsB,IAAlD,0BAIXH,GAAsB,cAAC,GAAD,CAAO9E,UAAW,kBAAM+E,GAAsB,IAAQzG,MAAO,gBAAiBuB,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAAtH,SACnB,sBAAK9G,MAAO,CAAC4H,QAAS,OAAQC,eAAgB,gBAA9C,UACI,cAAC,EAAD,CAAa1H,QApCV,WACfgG,EAAMqG,WAAWL,EAAOA,EAAKxD,IAAM,IACnCmD,GAAsB,IAkCV,iBACA,cAAC,EAAD,CAAa3L,QAAS,kBAAM2L,GAAsB,IAAlD,qBAGPC,GAAsB,eAAC,GAAD,CAAOhF,UAAW,kBAAMiF,GAAsB,IAAQ3G,MAAO,uBAAwBuB,MAAO,IAAKF,OAAQ,IAAKI,eAAe,EAA7H,UACnB,uBACI9J,KAAK,OACLgB,MAAOiO,EACPhP,SAAU,SAACa,GAAD,OAAOoO,EAAUpO,EAAEC,cAAcC,UAG3CmO,IAASP,GACT,uBACI5O,KAAK,OACLgB,MAAOwJ,EACPvK,SAAU,SAACa,GAAD,OAAO2J,EAAU3J,EAAEC,cAAcC,UAEnD,sBAAKgC,MAAO,CAAC4H,QAAS,OAAQC,eAAgB,eAAgBC,UAAW,QAAzE,UACI,cAAC,EAAD,CAAa3H,QAlDV,WACfgG,EAAMsG,WAAWN,EAAOA,EAAKxD,IAAM,GAAIsD,EAAQL,GAAYpE,GAC3DwE,GAAsB,GACtBE,EAAU,IACK,KAAX1E,GAAeC,EAAU,KA8CjB,oBACA,cAAC,EAAD,CAAatH,QAAS,kBAAM6L,GAAsB,IAAlD,8BC9DPU,GAAQ,WACjB,IAAMxD,EAAQtJ,aAA+C,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMA,SAC5E3F,EAAY3D,aAAmD,SAAAC,GAAK,OAAIA,EAAMqJ,MAAM3F,aACpFjE,EAAWC,cAGjBoN,qBAAU,WACNrN,EAASqK,QACV,CAACrK,IAEJ,IAMImH,EALEmG,EAAa,SAACxH,GAAD,OAAgB9F,EL8FX,SAAC8F,GAAD,OAAgB,SAAC9F,GACzCA,EAASoE,GAAe,YACxBuE,GAAoB7C,GACfhF,MAAK,SAAAC,GACFf,EAASqK,MACTrK,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aK3GYmJ,CAAazH,KACnD0H,EAAa,SAAC1H,EAAY2H,GAAb,OAAkCzN,EL6G7B,SAAC8F,EAAYzF,GAAb,OAA8B,SAACL,GACvDA,EAASoE,GAAe,YACxBuE,GAAoB7C,EAAIzF,GACnBS,MAAK,SAAAC,GACFf,EAASqK,MACTrK,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aK1H8BsJ,CAAa5H,EAAI2H,KAY/E,OANItG,EAJS7G,aAAuC,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMM,oBAI/D,KAEC,IAKP,gCACI,uCACe,YAAdjG,EACG,qBAAKvD,MAAO,CAACiN,SAAU,WAAYtG,KAAM,MAAOF,IAAK,SAArD,wBAEA,KACJ,cAAC,GAAD,IACA,cAAC,GAAD,CACIW,WAvBO,SAAC/B,GAAD,OAAmB/F,EL2Ed,SAAC+F,GAAD,OAAmB,SAAC/F,GAC5CA,EAASoE,GAAe,YACxBuE,GAAoB5C,GACfjF,MAAK,SAAAC,GACFf,EAASqK,MACTrK,EAASoE,GAAe,SACxBpE,EAASmK,IAAsB,IAC/ByD,YAAW,WACP5N,EAASmK,IAAsB,MAChC,QAENhJ,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aK5FeyJ,CAAa9H,KAwBhD6D,MAAOA,EACP/B,WAAY,CAAC,OAAQ,aAAc,UAAW,YAHlD,SAKK+B,GAASA,EAAMhI,KAAI,SAAAkM,GAAC,OAAI,cAAC,GAAD,CAErBX,WAAYK,EACZN,WAAYI,EACZjB,SAAUyB,EACVhB,UAAW,qCACP,8BAAMgB,EAAEzN,OACR,8BAAMyN,EAAEC,gBAEZd,UAAW,qCACP,cAAC,IAAD,CAASxM,GAAI,UAAYqN,EAAEzE,IAA3B,mBACA,cAAC,IAAD,CAAS5I,GAAE,iBAAYqN,EAAEzE,KAAzB,uBAVCyE,EAAEzE,UAaf,cAAC,GAAD,IACA,cAAC,GAAD,CAAOtD,MAAO,UAAWuB,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOC,UAAW,aAC3EF,UAAW,CACPJ,IAAKA,EAAI,KACT6G,gBAAiB,oBCxD3BC,GAAQ,WACjB,IAAMpE,EAAQvJ,aAA+C,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMC,SAC5E5F,EAAY3D,aAAmD,SAAAC,GAAK,OAAIA,EAAMqJ,MAAM3F,aACpFjE,EAAWC,cACV6F,EAAMgB,cAANhB,GAEPuH,qBAAU,WACNrN,EAAS2K,GAAW7E,MACtB,CAAC9F,IAEH,IAAMkO,EAAa,SAACC,EAAgBV,EAAkB/D,GAClD1J,ENgLoB,SAAC8F,EAAY2D,EAAkB2E,EAAgB1E,GAA/C,OAAmE,SAAC1J,GAC5FA,EAASoE,GAAe,YACxBuE,GAAoB7C,EAAI2D,EAAUC,GAC7B5I,MAAK,SAAAC,GACFf,EAAS2K,GAAWyD,IACpBpO,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aM7LnBiK,CAAaF,EAAQV,EAAU3H,EAAI4D,KAE1C4E,EAAa,SAACH,GAAD,OAAoBnO,EN8Jf,SAAC8F,EAAYsI,GAAb,OAAgC,SAACpO,GACzDA,EAASoE,GAAe,YACxBuE,GAAoB7C,GACfhF,MAAK,SAAAC,GACFf,EAAS2K,GAAWyD,IACpBpO,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aM3KgBmK,CAAaJ,EAAQrI,KAOrE,OACI,gCACI,uCACe,YAAd7B,EACG,qBAAKvD,MAAO,CAACiN,SAAU,WAAYtG,KAAM,MAAOF,IAAK,SAArD,wBAEA,KACJ,cAAC,GAAD,CACIW,WAdO,SAAC2B,EAAkBC,GAAnB,OAAuC1J,GN6IjCwO,EM7IuD,CAC5EC,aAAc3I,EACd2D,SAAUA,EACVC,OAAQA,GAAkB,IN0I4B,SAAC1J,GAC3DA,EAASoE,GAAe,YACxBuE,GAAoB6F,GACf1N,MAAK,SAAAC,GACFf,EAAS2K,GAAW6D,EAAMC,eAC1BzO,EAASoE,GAAe,YAE3BjD,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,eAbR,IAACoK,GM9Hb3E,MAAOA,EACPhC,WAAY,CAAC,WAAY,SAAU,QAAS,WAAY,WAH5D,SAKKgC,GAASA,EAAMjI,KAAI,SAAAkM,GAAC,OAAI,cAAC,GAAD,CAErBX,WAAYe,EACZhB,WAAYoB,EACZhC,SAAUwB,EACVhB,UAAW,qCAAE,8BAAMgB,GAAKA,EAAErE,WACtB,8BAAMqE,GAAKA,EAAEpE,SACb,8BAAMoE,GAAKA,EAAEnE,YANZmE,EAAEzE,c,oBCwDZqF,GAvFG,WACd,IAAM7E,EAAQvJ,aAA+C,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMC,SAD9D,EAEclK,oBAAS,GAFvB,mBAEbgP,EAFa,KAEFC,EAFE,OAG8BjP,mBAAS,GAHvC,mBAGbkP,EAHa,KAGMC,EAHN,KAId9O,EAAWC,cACV6F,EAAMgB,cAANhB,GAGPuH,qBAAU,WACNrN,EAAS2K,GAAW7E,MACtB,CAAC9F,IAGH,IA8BImH,EArBE4H,EAAW,SAACpF,GACd3J,EPkLyB,SAAC8F,EAAY6D,GAAb,OAA+B,SAAC3J,GAC7DA,EAASoE,GAAe,YACxBuE,GAAyB7C,EAAI6D,GACxB7I,MAAK,SAAAC,GACFf,EAASoE,GAAe,SACxBpE,EAASmK,IAAsB,IAC/ByD,YAAW,WACP5N,EAASmK,IAAsB,MAChC,QAENhJ,OAAM,SAAAC,GACCA,EAAI2D,SACJ/E,EAASmE,GAAW/C,EAAI2D,SAASzF,KAAKvB,QAEtCiC,EAASmE,GAAW,eAExBnE,EAASoE,GAAe,aOlMnB4K,CAAkBnF,EAAMgF,GAAmBxF,IAAKM,KAGvDsF,EAAY,SAAC/F,GACf,IAAIgG,EAAWhG,EAAUtH,KAAI,SAAC4H,EAAM2F,GAChC,MAAO,CAACA,QAAOxF,MAAOH,EAAKG,MAAOyF,OAAsB,IAAd5F,EAAKG,MAAc,EAAIH,EAAKG,MAAQgC,KAAK0D,SAAW,MAE9FC,EAAa,EACbC,EAAS,EAOd,OANCL,EAASM,SAAQ,SAACC,EAAIN,GACdI,EAASE,EAAGL,SACZE,EAAaG,EAAGN,MAChBI,EAASE,EAAGL,WAGdE,GAYV,OALInI,EAJS7G,aAAuC,SAAAC,GAAK,OAAIA,EAAMqJ,MAAMM,oBAI/D,KAEC,IAIP,sBAAKlM,UAAW0C,KAAMkF,UAAtB,UACI,gCACI,8BACI,mBAAG5H,UAAW0C,KAAMgP,KAApB,SAA2B7F,EAAMgF,GAAqBhF,EAAMgF,GAAmBpF,SAAU,oBAE7F,8BACI,cAAC,EAAD,CAAa5I,QA5CT,WAChB+N,GAAa,IA2CD,+BAGPD,GACD,gCACI,mBAAG3Q,UAAW0C,KAAMgP,KAApB,SAA2B7F,EAAMgF,GAAqBhF,EAAMgF,GAAmBnF,OAAQ,kBACvF,gCACI,cAAC,EAAD,CAAa7I,QAAS,WAAOkO,EAAS,IAAK/Q,UAAW0C,KAAMsF,OAA5D,mDACA,cAAC,EAAD,CAAanF,QAAS,WAAOkO,EAAS,IAAK/Q,UAAW0C,KAAMsF,OAA5D,4CACA,cAAC,EAAD,CAAanF,QAAS,WAAOkO,EAAS,IAAK/Q,UAAW0C,KAAMsF,OAA5D,oEACA,cAAC,EAAD,CAAanF,QAAS,WAAOkO,EAAS,IAAK/Q,UAAW0C,KAAMsF,OAA5D,2EACA,cAAC,EAAD,CAAanF,QAAS,WAAOkO,EAAS,IAAK/Q,UAAW0C,KAAMsF,OAA5D,yCAEJ,8BACA,cAAC,EAAD,CAAahI,UAAW0C,KAAMsF,OAAQnF,QAvD5B,WAClBiO,EAAqBG,EAAUpF,IAE/B+E,GAAa,IAoDL,4FAGJ,cAAC,GAAD,CAAO7I,MAAO,UAAWuB,MAAO,IAAKF,OAAQ,GAAII,eAAe,EAAOC,UAAW,aAC3EF,UAAW,CACPJ,IAAKA,EAAI,KACT6G,gBAAiB,oBC/E3BjH,GAAQ,CACjBC,MAAO,SACP2I,KAAM,QACNC,aAAc,gBACdC,QAAS,WACTC,aAAc,gBACdC,UAAW,oBACXC,MAAO,OACPC,MAAO,SACPC,MAAO,aACPC,WAAW,cAGFC,GAAS,WAClB,OACI,8BACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU9P,GAAIsG,GAAM4I,UAC1D,cAAC,IAAD,CAAOU,KAAMtJ,GAAMC,MAAOuJ,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMtJ,GAAM6I,aAAcW,OAAQ,kBAAM,cAAC,EAAD,OAC/C,cAAC,IAAD,CAAOF,KAAMtJ,GAAM8I,QAASU,OAAQ,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMtJ,GAAM+I,aAAcS,OAAQ,kBAAM,cAAC,GAAD,OAC/C,cAAC,IAAD,CAAOF,KAAMtJ,GAAMgJ,UAAWQ,OAAQ,kBAAM,cAACC,GAAD,OAC5C,cAAC,IAAD,CAAOH,KAAMtJ,GAAM4I,KAAMY,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOF,KAAMtJ,GAAMiJ,MAAOO,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMtJ,GAAMkJ,MAAOM,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAMtJ,GAAMmJ,MAAOK,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAMtJ,GAAMoJ,WAAYI,OAAQ,kBAAM,cAAC,GAAD,OAC7C,cAAC,IAAD,CAAUtL,KAAM,IAAKxE,GAAIsG,GAAMiJ,gB,oBCpCtCS,GAAS,WAClB,OACI,8BACI,qBAAIzS,UAAWI,KAAEsS,KAAjB,UACI,6BAAI,cAAC,IAAD,CAAS1S,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAMC,MAAtC,qBACJ,6BAAI,cAAC,IAAD,CAAShJ,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAM6I,aAAtC,4BACJ,6BAAI,cAAC,IAAD,CAAS5R,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAM8I,QAAtC,uBACJ,6BAAI,cAAC,IAAD,CAAS7R,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAM+I,aAAtC,sBACJ,6BAAI,cAAC,IAAD,CAAS9R,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAM4I,KAAtC,oBACJ,6BAAI,cAAC,IAAD,CAAS3R,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAMkJ,MAAtC,qBACJ,6BAAI,cAAC,IAAD,CAASjS,UAAWI,KAAEuS,KAAMlQ,GAAIsG,GAAMmJ,MAAtC,2BCCLU,OAXf,WACI,OACI,qBAAK5S,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,UCGD6S,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjQ,MAAK,YAAkD,IAA/CkQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCPRtR,GAAe,G,SCOf6R,GAAWC,aAAgB,CAC7B1M,M3BDwB,WAAoF,IAAnFrE,EAAkF,uDAAxDf,EAAc+R,EAA0C,uCAC3G,OAAQA,EAAO7T,MACX,IAAK,mBACD,OAAO,2BAAI6C,GAAX,IAAkByD,WAAYuN,EAAOvN,aACzC,IAAK,YACD,OAAO,2BAAIzD,GAAX,IAAkBxC,MAAOwT,EAAOxT,QACpC,IAAK,iBACD,OAAO,2BAAIwC,GAAX,IAAkB0D,UAAWsN,EAAOtN,YACxC,QACI,OAAO1D,I2BPfC,atCF+B,WAAoF,IAAnFD,EAAkF,uDAAxDf,EAAc+R,EAA0C,uCAClH,OAAQA,EAAO7T,MACX,IAAK,2BACD,OAAO,2BAAI6C,GAAX,IAAkBd,UAAW8R,EAAOrQ,eACxC,QACI,OAAOX,IsCFfiR,QDR0B,WAAoF,IAAnFjR,EAAkF,uDAAxDf,GAAc+R,EAA0C,uCAIrG,OAHAA,EAAO7T,KAGA6C,GCKfiF,axBoD+B,WAAoF,IAAnFjF,EAAkF,uDAAxDf,GAAc+R,EAA0C,uCAClH,OAAQA,EAAO7T,MACX,KAAKwH,GACD,OAAO,2BACI3E,GADX,IAEQxC,MAAOwT,EAAOxT,QAG1B,KAAKoH,GACL,OAAO,2BACA5E,GADP,IAEIX,MAAO2R,EAAO3R,QAGlB,KAAKwF,GACL,OAAO,2BACA7E,GADP,IAEI8E,YAAakM,EAAOlM,cAExB,QACI,OAAO9E,IwBvEfiG,apBgC+B,WAAoF,IAAnFjG,EAAkF,uDAAxDf,GAAc+R,EAA0C,uCAClH,OAAQA,EAAO7T,MACX,KAAKyI,GACD,OAAO,2BACA5F,GADP,IAEI+F,YAAaiL,EAAO1R,WAE5B,KAAKuG,GACD,OAAO,2BACA7F,GADP,IAEIxC,MAAOwT,EAAOxT,QAEtB,KAAKsI,GACD,OAAO,2BACA9F,GADP,IAEIgG,OAAQgL,EAAOhL,SAEvB,QACI,OAAOhG,IoBjDfqJ,MbIwB,WAAoF,IAAnFrJ,EAAkF,uDAAxDf,GAAc+R,EAA0C,uCAC3G,OAAQA,EAAO7T,MACX,IAAK,iBACD,OAAO,2BAAI6C,GAAX,IAAkB0D,UAAWsN,EAAOtN,YACxC,IAAK,YACD,OAAO,2BAAI1D,GAAX,IAAkBxC,MAAOwT,EAAOxT,QACpC,IAAK,YACD,OAAO,2BAAIwC,GAAX,IAAkBqJ,MAAO2H,EAAO3H,QACpC,IAAK,YACD,OAAO,2BAAIrJ,GAAX,IAAkBsJ,MAAO0H,EAAO1H,QACpC,IAAK,mBACD,OAAO,2BAAItJ,GAAX,IAAkBuJ,YAAayH,EAAOzH,YAAajB,IAAK0I,EAAO1I,IAAKC,IAAKyI,EAAOzI,MACpF,IAAK,oBACD,OAAO,2BAAIvI,GAAX,IAAkBwJ,YAAawH,EAAO7S,QAC1C,IAAK,mBACD,OAAO,2BAAI6B,GAAX,IAAkByJ,YAAauH,EAAOvH,cAC1C,IAAK,kBACD,OAAO,2BAAIzJ,GAAX,IAAkB0J,gBAAiBsH,EAAO9G,aAC9C,IAAK,yBACD,OAAO,2BAAIlK,GAAX,IAAkB2J,iBAAkBqH,EAAOnH,OAC/C,QACI,OAAO7J,MatBNkR,GAAQC,aAAYL,GAAUM,aAAgBC,OCV3DC,IAAStB,OACL,cAAC,IAAD,CAAUkB,MAAOA,GAAjB,SACQ,cAAC,GAAD,MAGRK,SAASC,eAAe,SAM5BlB,O","file":"static/js/main.09962927.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3_FpB\",\"tableItem\":\"Table_tableItem__2-RYA\",\"tableHeader\":\"Table_tableHeader__3I7xH\",\"buttonsDiv\":\"Table_buttonsDiv__3xgLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LearnPage_container__1PTnV\",\"text\":\"LearnPage_text__vzosn\",\"button\":\"LearnPage_button___qHNi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Header_list__IdKjl\",\"link\":\"Header_link__3sFNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__1gH5G\",\"divForSpan\":\"SuperEditableSpan_divForSpan__1StYY\",\"doubleClick\":\"SuperEditableSpan_doubleClick__3C9LR\",\"message\":\"SuperEditableSpan_message__3wA61\",\"superSpan\":\"SuperEditableSpan_superSpan__3TjPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2gbhW\",\"errorInput\":\"SuperInputText_errorInput__3NaO5\",\"error\":\"SuperInputText_error__RDABt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"PasswordRecovery_error__1eW6s\",\"container\":\"PasswordRecovery_container__VfsvG\",\"button\":\"PasswordRecovery_button__3SIwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"Modal_modalWindow__3LuEI\",\"buttonsStyle\":\"Modal_buttonsStyle__Xd00D\",\"backgroundDiv\":\"Modal_backgroundDiv__39IB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperContainer\":\"Pagination_wrapperContainer__3KF-6\",\"activeButton\":\"Pagination_activeButton__327Az\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Nd_8l\",\"red\":\"SuperButton_red__19Ly7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3_RMS\",\"spanClassName\":\"SuperCheckbox_spanClassName__1G6pY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperRadio_select__1ouif\",\"input\":\"SuperRadio_input__2BpkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2tZZC\",\"input\":\"SuperSelect_input__iS2Im\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__15AjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__3M8kR\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${className} ${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\nimport {DataRegistrationType} from \"./Registration\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0',\r\n    withCredentials: true\r\n})\r\n\r\nexport const registerAPI = {\r\n    register(data: DataRegistrationType) {\r\n        return instance.post<CommonResponseType<ResponseRegisterType>>('/auth/register', data)\r\n    }\r\n}\r\n\r\n//types\r\nexport type CommonResponseType<T = {}> = {\r\n    data: T\r\n    messages: Array<string>\r\n    fieldsErrors: Array<string>\r\n    resultCode: number\r\n}\r\ntype ResponseRegisterType = {\r\n    addedUser: any\r\n    error?: string\r\n}","import {DataRegistrationType} from \"../Components/Registration/Registration\";\r\nimport {Dispatch} from \"redux\";\r\nimport {registerAPI} from \"../Components/Registration/registration-API\";\r\n\r\n\r\nconst InitialState: InitialStateType = {\r\n    isNewUser: false\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET-REGISTERED-USER\":\r\n            return {...state, isNewUser: action.isRegistered}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setRegisteredUserAC = (isRegistered: boolean) => ({type: 'auth/SET-REGISTERED-USER', isRegistered} as const)\r\n\r\n\r\n//thunks\r\nexport const registerUserTC = (data: DataRegistrationType) => (dispatch: Dispatch<ActionTypes>) => {\r\n    registerAPI.register(data)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setRegisteredUserAC(true))\r\n        })\r\n        .catch(err => {\r\n            alert(err)\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype ActionTypes = ReturnType<typeof setRegisteredUserAC>\r\ntype InitialStateType = {\r\n    isNewUser: boolean\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport {registerUserTC, setRegisteredUserAC} from \"../../store/registration-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nexport const Registration = () => {\r\n    const [data, setData] = useState<DataRegistrationType>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: ''\r\n    })\r\n    const dispatch = useDispatch()\r\n    const isNewUser = useSelector<AppRootStateType, boolean>(state => state.registration.isNewUser)\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fieldName = e.target.name\r\n        for (let key in data) {\r\n            if (key === fieldName) {\r\n                setData({...data, [key]: e.currentTarget.value})\r\n            }\r\n        }\r\n    }\r\n    const onSubmitRegistration = () => {\r\n        data.password === data.repeatPassword\r\n        && dispatch(registerUserTC({email: data.email, password: data.password}))\r\n        setData({email: '', password: '', repeatPassword: ''})\r\n    }\r\n\r\n    if (isNewUser) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'email'}\r\n                                name={'email'}\r\n                                value={data.email}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'password'}\r\n                                name={'password'}\r\n                                value={data.password}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperInputText placeholder={'repeat password'}\r\n                                name={'repeatPassword'}\r\n                                value={data.repeatPassword}\r\n                                onChange={onChangeHandler}\r\n                />\r\n            </div>\r\n            <div style={{margin: '5px'}}>\r\n                <SuperButton onClick={onSubmitRegistration}>Register</SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\nexport type DataRegistrationType = {\r\n    email: string\r\n    password: string\r\n    repeatPassword?: string\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {// map options with key\r\n        const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n            // onChange, onChangeOption\r\n            if (onChangeOption) {\r\n                onChangeOption(o)\r\n            }\r\n        }\r\n\r\n        return <label key={name + \"-\" + i}>\r\n            <input\r\n                className={s.input}\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={value === o ? true : false}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\nimport s from \"./SuperSelect.module.css\"\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions = options?.map((op,i) => <option key={i}>{op}</option>) // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)// сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\"\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n    const [onMouseEnter, setOnMouseEnter] = useState<boolean>(false);\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode(); // выключить editMode при нажатии Enter\r\n        setEditMode(false);\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false);\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode(); // включить editMode при двойном клике\r\n        setEditMode(true);\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.spanStyle} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <div><SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onMouseEnter={() => setOnMouseEnter(true)}\r\n                        onMouseLeave={() => setOnMouseEnter(false)}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                        <div className={onMouseEnter ? s.message : s.doubleClick}>Click outside for enter</div>\r\n                    </div>\r\n                ) : (\r\n                    <div className={s.divForSpan}>\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        onMouseEnter={() => setOnMouseEnter(true)}\r\n                        onMouseLeave={() => setOnMouseEnter(false)}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                        <div className={onMouseEnter ? s.message : s.doubleClick}>DoubleClick for changes</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={value}\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperRadio from \"../../SuperComponents/c6-SuperRadio/SuperRadio\";\r\nimport SuperSelect from \"../../SuperComponents/c5-SuperSelect/SuperSelect\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../SuperComponents/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperRange from \"../../SuperComponents/c7-SuperRange/SuperRange\";\r\n\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n            <div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperInputText/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperButton>Submit</SuperButton></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperRadio/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperSelect/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperCheckbox/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperEditableSpan value={\"Editable span\"}/></div>\r\n                <div style={{marginBottom: \"20px\"}}><SuperRange/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const loginAPI = {\r\n    login(data: LoginRequestType) {\r\n         return axiosInstance.post(\"auth/login\", data)\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete(\"auth/me\")\r\n    },\r\n    me() {\r\n        return axiosInstance.post(\"auth/me\")\r\n    }\r\n}\r\n\r\nexport type LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","import {Dispatch} from \"redux\";\r\nimport {loginAPI, LoginRequestType} from \"../Components/Login/loginAPI\";\r\n\r\nconst InitialState: InitialStateType = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isLoading: 'idle'\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS-LOGGED-IN\":\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nconst setIsLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {type: \"SET-IS-LOGGED-IN\", isLoggedIn} as const\r\n}\r\nconst setErrorAC = (error: string | null ) => {\r\n    return {type: \"SET-ERROR\", error} as const\r\n}\r\nconst setIsLoadingAC = (isLoading: IsLoadingValuesType ) => {\r\n    return {type: \"SET-IS-LOADING\", isLoading} as const\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginRequestType) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setErrorAC(null))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const authMeTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.me()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    loginAPI.me()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if(err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionTypes = ReturnType<typeof setIsLoggedInAC> | ReturnType<typeof setErrorAC> | ReturnType<typeof setIsLoadingAC>\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isLoading: IsLoadingValuesType\r\n}\r\nexport type IsLoadingValuesType = 'loading' | 'idle'","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {IsLoadingValuesType, loginTC} from \"../../store/login-reducer\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\n\r\n\r\nexport const Login = () => {\r\n    let [email, setEmail] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let [rememberMe, setRememberMe] = useState(false)\r\n    let [validateError, setValidateError] = useState<string | null>(null)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.login.error)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.login.isLoading)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.currentTarget.checked)\r\n\r\n    const onClickLogin = () => {\r\n        if(email === \"\" || password === \"\") {\r\n            setValidateError(\"Email or password required\")\r\n            return\r\n        }\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n    const onKeyPress = () => {\r\n        if(validateError != null) {\r\n            setValidateError(null)\r\n        }\r\n    }\r\n\r\n    if(isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            {isLoading === \"loading\" ? <div>Loading...</div> : null}\r\n            <div className={s.loginForm}>\r\n                <SuperInputText placeholder={\"Email\"} type={\"email\"} value={email} onKeyPress={onKeyPress} onChange={onChangeEmail}/>\r\n                <SuperInputText placeholder={\"Password\"} type=\"password\" value={password} onKeyPress={onKeyPress} onChange={onChangePassword}/>\r\n                <SuperCheckbox type=\"checkbox\" checked={rememberMe} onChange={onChangeRememberMe}/>\r\n                <SuperButton disabled={isLoading === \"loading\" ? true : false} onClick={onClickLogin}>Log IN</SuperButton>\r\n            </div>\r\n            {error ? <div>{error}</div> : null}\r\n            {validateError ? <div>{validateError}</div> : null}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\n\r\nexport const recoveryPassAPI = {\r\n\r\n    sendEmail(email: string) {\r\n       return instance.post('auth/forgot',\r\n            {\r\n                email,\r\n                from: \"AlexB admin\",\r\n                message: \"<div style=\\\"background-color: lime; padding: 15px\\\"> password recovery link: <a href=\\'http://elizarovartem.github.io/Friday/#/pas-enter/$token$\\'>link</a></div>\\`\"\r\n            })\r\n    }\r\n}","\r\nimport { recoveryPassAPI } from \"../Components/PasswordRecovery/recoveryPassAPI\";\r\n\r\nconst FORGOT_PASS = 'FORGOT_PASS';\r\nconst CHANGE_EMAIL = 'CHANGE_EMAIL';\r\nconst EMAIL_SENDED = 'EMAIL_SENDED';\r\n\r\ntype ForgotPassType = {\r\n    type: typeof FORGOT_PASS\r\n    error: string\r\n}\r\n\r\ntype UserEmailType = {\r\n    type: typeof CHANGE_EMAIL\r\n    email: string\r\n}\r\n\r\ntype EmailSendedType = {\r\n    type: typeof EMAIL_SENDED\r\n    emailSended: boolean\r\n}\r\n\r\n\r\n\r\nexport const forgotPassAC = (error: string): ForgotPassType => {\r\n    return {\r\n        type: FORGOT_PASS,\r\n        error\r\n    }\r\n}\r\n\r\nexport const userEmailAC = (email: string): UserEmailType => {\r\n    return {\r\n        type: CHANGE_EMAIL,\r\n        email\r\n    }\r\n}\r\n\r\nexport const emailSended = (emailSended: boolean): EmailSendedType => {\r\n    return {\r\n        type: EMAIL_SENDED,\r\n        emailSended\r\n    }\r\n}\r\n\r\nexport const sendRecoveryMess = (email: string) => (dispatch: (action:ActionTypes) => void) => {\r\n    \r\n    recoveryPassAPI.sendEmail(email).then(res => {\r\n        dispatch(emailSended(true));\r\n    } ).catch(err => {\r\n        dispatch(forgotPassAC(err.response.data.error))\r\n    })\r\n}\r\n\r\nexport const addUserEmail = (email: string) => (dispatch: (action:ActionTypes) => void) => {\r\n    dispatch(userEmailAC(email));\r\n}\r\n\r\nconst InitialState = {\r\n    error: '',\r\n    email: '',\r\n    emailSended: false \r\n}\r\n\r\n\r\nexport const recoveryPassReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FORGOT_PASS: \r\n            return {\r\n                    ...state,\r\n                    error: action.error\r\n            }\r\n\r\n        case CHANGE_EMAIL: \r\n        return {\r\n            ...state,\r\n            email: action.email\r\n        }    \r\n\r\n        case EMAIL_SENDED: \r\n        return {\r\n            ...state,\r\n            emailSended: action.emailSended\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionTypes = ForgotPassType | UserEmailType | EmailSendedType\r\ntype InitialStateType = typeof InitialState;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendRecoveryMess,addUserEmail } from \"../../store/recoveryPass-reducer\";\r\nimport { AppRootStateType } from \"../../store/store\";\r\nimport { PasswordRecovery } from \"./PasswordRecovery\";\r\n\r\n\r\n const mapStateToProps = (state: AppRootStateType) => ({\r\n   error: state.recoveryPass.error,\r\n   email: state.recoveryPass.email,\r\n   emailSended: state.recoveryPass.emailSended\r\n })\r\n\r\n\r\n\r\nconst PasswordRecoveryContainer = connect(mapStateToProps,{sendRecoveryMess, addUserEmail})(PasswordRecovery)\r\n\r\nexport default PasswordRecoveryContainer\r\n\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ROUTE } from \"../Routes/Routes\";\r\nimport style from \"./PasswordRecovery.module.css\"\r\n\r\ntype PasswordRecoveryType = {\r\n  error: string\r\n  email: string\r\n  emailSended: boolean\r\n  sendRecoveryMess: (email: string) => void\r\n  addUserEmail: (email: string) => void\r\n}\r\n\r\n\r\nexport const PasswordRecovery: React.FC<PasswordRecoveryType> = ({error, email, emailSended, sendRecoveryMess, addUserEmail}) => {\r\n  \r\n  const addEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.currentTarget.value &&  addUserEmail(e.currentTarget.value)\r\n  }\r\n\r\n  \r\n  const sendEmail = () => {\r\n    sendRecoveryMess(email);\r\n  }\r\n  \r\n  if(emailSended && !error) {\r\n    return <Redirect to={'/pas-enter/error'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>PasswordRecovery</h1>\r\n      <div className = {style.container}>\r\n        {error && <p className = {style.error}>{error}</p>}\r\n        <label htmlFor=\"email\">Enter your Email</label>\r\n        <input onChange={addEmail} id=\"email\" type=\"email\" title=\"Email\" />\r\n        <button className = {style.button} onClick = {sendEmail} >Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n\r\n\r\nexport const enterNewPassAPI = {\r\n\r\n    sendNewPass(password: string, resetPasswordToken: string) {\r\n       return instance.post('auth/set-new-password',\r\n            {\r\n                password,\r\n                resetPasswordToken\r\n            })\r\n    }\r\n}","\r\nimport { enterNewPassAPI } from \"../Components/NewPasswordEnter/enterNewPassAPI\";\r\n\r\n\r\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst SEND_NEW_PASS_SUCCES = 'SEND_NEW_PASS_SUCCES';\r\n\r\nexport const setError = (error: string): SetErrorPasswordType => {\r\n    return {\r\n        type: SET_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nexport const changePassword = (password: string):ChangePasswordType  => {\r\n    return {\r\n        type: CHANGE_PASSWORD,\r\n        password\r\n    }\r\n}\r\n\r\nexport const succesfullChange = (succes: boolean): SuccesfullPassChange => {\r\n    return {\r\n        type: SEND_NEW_PASS_SUCCES,\r\n        succes\r\n    }\r\n}\r\n\r\nexport const sendNewPassword = (newPassword: string, token: string) => (dispatch: (action:ActionTypes) => void) => {\r\n        enterNewPassAPI.sendNewPass(newPassword,token).then(res => {\r\n            dispatch(succesfullChange(true))\r\n        }).catch(error => {\r\n            dispatch(setError(error.response.data.error));\r\n        })\r\n        \r\n}\r\n\r\nconst InitialState = {\r\n    newPassword:'',\r\n    error: '',\r\n    succes: false\r\n}\r\n\r\n\r\n\r\nexport const enterNewPassReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case CHANGE_PASSWORD: \r\n            return {\r\n                ...state,\r\n                newPassword: action.password\r\n            }\r\n        case SET_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }    \r\n        case SEND_NEW_PASS_SUCCES:\r\n            return {\r\n                ...state,\r\n                succes: action.succes\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\ntype ChangePasswordType = {\r\n    type: typeof CHANGE_PASSWORD,\r\n    password: string \r\n}\r\ntype SetErrorPasswordType = {\r\n    type: typeof SET_ERROR,\r\n    error: string \r\n}\r\n\r\ntype SuccesfullPassChange = {\r\n    type: typeof SEND_NEW_PASS_SUCCES,\r\n    succes: boolean\r\n}\r\ntype ActionTypes = ChangePasswordType | SetErrorPasswordType | SuccesfullPassChange\r\ntype InitialStateType = typeof InitialState","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport { NewPasswordEnter } from './NewPasswordEnter';\r\nimport {changePassword, sendNewPassword} from '../../store/enterNewPass-reducer'\r\n\r\nconst mapStateToProps = (state:AppRootStateType) =>{\r\n    return {\r\n        newPassword: state.enterNewPass.newPassword,\r\n        error: state.enterNewPass.error,\r\n        succes: state.enterNewPass.succes\r\n    }\r\n}\r\n\r\n \r\nexport default connect(mapStateToProps, {changePassword,sendNewPassword})(NewPasswordEnter)","import React from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { ROUTE } from \"../Routes/Routes\";\r\n\r\n\r\ninterface ParamTypes {\r\n  token: string\r\n}\r\n\r\ntype NewPasswordEnterType = {\r\n  newPassword: string\r\n  error: string\r\n  succes: boolean\r\n  changePassword: (value: string) => void\r\n  sendNewPassword: (pas: string, token: string) => void\r\n}\r\n\r\nexport const NewPasswordEnter = (props:NewPasswordEnterType) => {\r\n\r\n  let {token} = useParams<ParamTypes>()\r\n  \r\n  const onChangeNewPass = (e: React.ChangeEvent<HTMLInputElement>) =>{\r\n    props.changePassword(e.currentTarget.value)\r\n  }\r\n\r\n  const onSendNewPass = () => {\r\n    props.sendNewPassword(props.newPassword, token)\r\n  }\r\n\r\n  if(props.succes) {\r\n    return <Redirect to ={ROUTE.LOGIN} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please enter new password</h1>\r\n      {props.error && props.error}\r\n      <div>\r\n        <label htmlFor=\"password\">Enter new password</label>\r\n        <input onChange={onChangeNewPass} value={props.newPassword} id=\"password\" type=\"password\" />\r\n        <button onClick={onSendNewPass}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport s from './Modal.module.css'\r\n\r\n\r\ntype ModalPropsType = {\r\n    title: string\r\n    width: number\r\n    height: number\r\n    backgroundDiv: boolean\r\n    bgOnClick: () => void\r\n    CSSStyles?:  React.CSSProperties\r\n}\r\nexport const Modal: React.FC<ModalPropsType> = (props) => {\r\n\r\n    const modalStyles = {\r\n        top: `calc(50vh - ${props.height / 2}px)`,\r\n        left: `calc(50vw - ${props.width / 2}px)`,\r\n        width: props.width,\r\n        height: props.height,\r\n        ...props.CSSStyles\r\n    } as const\r\n\r\n    return (\r\n        <>\r\n            {props.backgroundDiv && <div onClick={props.bgOnClick} className={s.backgroundDiv}></div>}\r\n            <div className={s.modalWindow} style={modalStyles}>\r\n                <h3>{props.title}</h3>\r\n                <div className={s.buttonsStyle}>{props.children}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import s from \"../Table.module.css\";\r\nimport SuperButton from \"../../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport React, {useState} from \"react\";\r\nimport {Modal} from \"../../Modals/Modal\";\r\n\r\ntype TableHeaderPopsType = {\r\n    fieldNames: string[]\r\n    createItem: (title: string, answer?: string) => void\r\n}\r\nexport const TableHeader = ({fieldNames, createItem}: TableHeaderPopsType) => {\r\n    let [displayModal, setDisplayModal] = useState(false)\r\n    let [value, setValue] = useState(\"\")\r\n    let [value2, setValue2] = useState(\"\")\r\n\r\n    const createHandler = () => {\r\n        createItem(value, fieldNames[4] && value2)\r\n        setDisplayModal(false)\r\n        setValue(\"\")\r\n        if(value2 !== \"\") setValue2(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${s.tableItem} ${s.tableHeader}`}>\r\n                <div>{fieldNames[0]}</div>\r\n                <div>{fieldNames[1]}</div>\r\n                <div>{fieldNames[2]}</div>\r\n                {fieldNames[4] && <div>{fieldNames[4]}</div>}\r\n                <div>\r\n                    {fieldNames[3]}: <SuperButton onClick={() => setDisplayModal(true)}>Add</SuperButton>\r\n                </div>\r\n            </div>\r\n            {displayModal && <Modal bgOnClick={() => setDisplayModal(false)} title={\"Fill in the fields\"} width={500} height={200} backgroundDiv={true}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.currentTarget.value)}\r\n                />\r\n                {\r\n                    fieldNames[4] &&\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value2}\r\n                        onChange={(e) => setValue2(e.currentTarget.value)}\r\n                    />}\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\"}}>\r\n                    <SuperButton onClick={createHandler}>Submit</SuperButton>\r\n                    <SuperButton onClick={() => setDisplayModal(false)}>Cancel</SuperButton>\r\n                </div>\r\n            </Modal>}\r\n        </>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport s from './Table.module.css'\r\nimport {CardType, PackType} from \"../Packs/packs-api\";\r\nimport {TableHeader} from \"./TableHeader/TableHeader\";\r\n\r\n\r\ntype TablePropsType = {\r\n    packs?: Array<PackType>\r\n    cards?: Array<CardType>\r\n    fieldNames: string[]\r\n    createItem: (title: string, answer?: string) => void\r\n}\r\nexport const Table: React.FC<TablePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={s.table}>\r\n            <TableHeader fieldNames={props.fieldNames} createItem={props.createItem}/>\r\n            <div>\r\n               {/* {props.packs && props.packs.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={props.updateItem}\r\n                    deleteItem={props.deleteItem}\r\n                    packItem={p}\r\n                    children1={<> <div>{p.name}</div>\r\n                        <div>{p.cardsCount}</div></>}\r\n                    children2={ <NavLink to={`/cards/${p._id}`}>Cards</NavLink>}\r\n                />)}\r\n                {props.cards && props.cards.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={props.updateItem}\r\n                    deleteItem={props.deleteItem}\r\n                    cardItem={p}\r\n                    children1={<><div>{p && p.question}</div>\r\n                        <div>{p && p.answer}</div>\r\n                        <div>{p && p.grade}</div></>}\r\n                />)}*/}\r\n                {props.children}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const packsAPI = {\r\n    getPacks(packName: string, min: number, max: number, pageCount: number = 15, page: number = 1) {\r\n        return axiosInstance\r\n            .get<GetPacksResponseType>(`cards/pack?pageCount=${pageCount}&page=${page}&packName=${packName}&min=${min}&max=${max}`)\r\n    },\r\n    createPack(title: string) {\r\n        return axiosInstance.post(`cards/pack`, {cardsPack: {name: title}})\r\n    },\r\n    deletePack(id: string) {\r\n        return axiosInstance.delete(`cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string, name: string) {\r\n        return axiosInstance.put(`cards/pack`, {cardsPack: {_id: id, name}})\r\n    },\r\n    getCards(cardsPAckId: string, pageCount: number = 500, page: number = 1) {\r\n        return axiosInstance\r\n            .get<GetCardsResponseType>(`cards/card?cardsPack_id=${cardsPAckId}&pageCount=${pageCount}&page=${page}`)\r\n    },\r\n    createCard(reqModel: CreateCardRequestType) {\r\n        return axiosInstance.post(`cards/card`, {card: reqModel})\r\n    },\r\n    deleteCard(id: string) {\r\n        return axiosInstance.delete(`cards/card?id=${id}`)\r\n    },\r\n    updateCard(id: string, question: string, answer?: string) {\r\n        return axiosInstance.put(`cards/card`, {card: {_id: id, question, answer}})\r\n    },\r\n    updateCardGrade(id: string, grade: number) {\r\n        return axiosInstance.put(`cards/card`, {card: {_id: id, grade}})\r\n    },\r\n\r\n}\r\n\r\nexport type CreateCardRequestType = {\r\n    cardsPack_id: string\r\n    question: string\r\n    answer: string\r\n}\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number\r\n    shots: number\r\n    rating: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype GetPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {CardType, CreateCardRequestType, packsAPI, PackType} from \"../Components/Packs/packs-api\";\r\nimport {strict} from \"assert\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\nconst InitialState: InitialStateType = {\r\n    isLoading: \"idle\",\r\n    error: null,\r\n    packs: [],\r\n    cards: [],\r\n    searchValue: '',\r\n    min: 0,\r\n    max: 100,\r\n    packsOnPage: 10,\r\n    currentPage: 1,\r\n    totalPacksCount: 0,\r\n    showSuccessModal: false\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case \"SET-PACKS\":\r\n            return {...state, packs: action.packs}\r\n        case \"SET-CARDS\":\r\n            return {...state, cards: action.cards}\r\n        case \"SET-SEARCH-VALUE\":\r\n            return {...state, searchValue: action.searchValue, min: action.min, max: action.max}\r\n        case \"SET-PACKS-ON-PAGE\":\r\n            return {...state, packsOnPage: action.value}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-PACKS\":\r\n            return {...state, totalPacksCount: action.totalPacks}\r\n        case \"SET-SHOW-SUCCESS-MODAL\":\r\n            return {...state, showSuccessModal: action.show}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// actions\r\nconst setErrorAC = (error: string | null) => {\r\n    return {type: \"SET-ERROR\", error} as const\r\n}\r\nconst setIsLoadingAC = (isLoading: IsLoadingValuesType) => {\r\n    return {type: \"SET-IS-LOADING\", isLoading} as const\r\n}\r\nconst setPacksAC = (packs: Array<PackType>) => {\r\n    return {type: \"SET-PACKS\", packs} as const\r\n}\r\nconst setCardsAC = (cards: Array<CardType>) => {\r\n    return {type: \"SET-CARDS\", cards} as const\r\n}\r\nexport const setSearchValueAC = (searchValue: string, min: number, max: number) => {\r\n    return {type: \"SET-SEARCH-VALUE\", searchValue, min, max} as const\r\n}\r\nexport const setPacksOnPageAC = (value: number) => {\r\n    return {type: \"SET-PACKS-ON-PAGE\", value} as const\r\n}\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {type: \"SET-CURRENT-PAGE\", currentPage} as const\r\n}\r\nconst setTotalPacksAC = (totalPacks: number) => {\r\n    return {type: \"SET-TOTAL-PACKS\", totalPacks} as const\r\n}\r\nexport const setShowSuccessModalAC = (show: boolean) => {\r\n    return {type: \"SET-SHOW-SUCCESS-MODAL\", show} as const\r\n}\r\n\r\n// thunks\r\nexport const getPacksTC = () => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n\r\n    const state = getState()\r\n    const searchName = state.packs.searchValue\r\n    const min = state.packs.min\r\n    const max = state.packs.max\r\n    const packsOnPage = state.packs.packsOnPage\r\n    const currentPage = state.packs.currentPage\r\n\r\n    packsAPI.getPacks(searchName, min, max, packsOnPage, currentPage)\r\n        .then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setTotalPacksAC(res.data.cardPacksTotalCount))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const createPackTC = (title: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createPack(title)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const deletePackTC = (id: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deletePack(id)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const updatePackTC = (id: string, name: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updatePack(id, name)\r\n        .then(res => {\r\n            dispatch(getPacksTC() as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\nexport const getCardsTC = (cardsPackId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.getCards(cardsPackId)\r\n        .then(res => {\r\n            dispatch(setCardsAC(res.data.cards))\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const createCardTC = (model: CreateCardRequestType) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.createCard(model)\r\n        .then(res => {\r\n            dispatch(getCardsTC(model.cardsPack_id) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const deleteCardTC = (id: string, packId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const updateCardTC = (id: string, question: string, packId: string, answer?: string) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updateCard(id, question, answer)\r\n        .then(res => {\r\n            dispatch(getCardsTC(packId) as any)\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\nexport const updateCardGradeTC = (id: string, grade: number) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingAC(\"loading\"))\r\n    packsAPI.updateCardGrade(id, grade)\r\n        .then(res => {\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n            dispatch(setShowSuccessModalAC(true))\r\n            setTimeout(() => {\r\n                dispatch(setShowSuccessModalAC(false))\r\n            }, 2000)\r\n        })\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(\"Some error\"))\r\n            }\r\n            dispatch(setIsLoadingAC(\"idle\"))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionTypes =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setIsLoadingAC>\r\n    | ReturnType<typeof setSearchValueAC>\r\n    | ReturnType<typeof setPacksOnPageAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalPacksAC>\r\n    | ReturnType<typeof setShowSuccessModalAC>\r\ntype InitialStateType = {\r\n    isLoading: IsLoadingValuesType\r\n    error: string | null\r\n    packs: Array<PackType>\r\n    cards: Array<CardType>\r\n    searchValue: string\r\n    min: number\r\n    max: number\r\n    packsOnPage: number\r\n    currentPage: number\r\n    totalPacksCount: number\r\n    showSuccessModal: boolean\r\n}\r\nexport type IsLoadingValuesType = 'loading' | 'idle'","import React, {ChangeEvent} from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange: (value:  number[]) => void\r\n    value:  number[]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n    let onChangeCallback = (e: ChangeEvent<{}>, val: number | number []) => {\r\n\r\n\r\n        onChangeRange([...(val as number[])])\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div style={{width: \"300px\", margin: \"0 auto\"}}>\r\n                <Slider\r\n                    value={value}\r\n                    onChange={onChangeCallback}\r\n                    valueLabelDisplay=\"auto\"\r\n                    aria-labelledby=\"range-slider\"\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../../SuperComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport SuperDoubleRange from \"../../SuperComponents/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getPacksTC, setSearchValueAC} from \"../../store/packs-reducer\";\r\n\r\ntype PropsType = {}\r\n\r\nexport const Search = (props: PropsType) => {\r\n\r\n    const [min, setMin] = useState(0)\r\n    const [max, setMax] = useState(100)\r\n    const [valueSearch, setValueSearch] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmitSearch = () => {\r\n        dispatch(setSearchValueAC(valueSearch, min, max))\r\n        dispatch(getPacksTC())\r\n        // or getPacksWithParamsThunk(valueSearch, min, max)\r\n    }\r\n    const onChangeRange = (value: number[]) => {\r\n        setMin(value[0])\r\n        setMax(value[1])\r\n    }\r\n    const onChangeText = (value: string) => {\r\n        setValueSearch(value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            Search\r\n            <SuperInputText onChangeText={onChangeText} value={valueSearch}/>\r\n            <SuperDoubleRange onChangeRange={onChangeRange} value={[min, max]}/>\r\n            <SuperButton onClick={onSubmitSearch}>Search</SuperButton>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './Pagination.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC, setCurrentPageAC, setPacksOnPageAC} from \"../../store/packs-reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\n\r\nexport const Pagination = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const countItems = useSelector<AppRootStateType, number>(state => state.packs.packsOnPage)\r\n    const currentPage = useSelector<AppRootStateType, number>(state => state.packs.currentPage)\r\n    const totalPacksCount = useSelector<AppRootStateType, number>(state => state.packs.totalPacksCount)\r\n    const pageTotalCount = Math.ceil(totalPacksCount / countItems)\r\n\r\n\r\n    const setPackOnPageNumber = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(setPacksOnPageAC(Number(e.currentTarget.value)))\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n\r\n\r\n    const pages = [];\r\n    for (let i = 0; i < pageTotalCount; i++) {\r\n        const onPageClick = () => {\r\n            dispatch(setCurrentPageAC(i + 1))\r\n            dispatch(getPacksTC())\r\n        }\r\n        if (i + 1 === 1 || i + 1 === pageTotalCount) {\r\n            pages.push((\r\n                <button\r\n                    key={i + 1}\r\n                    className={currentPage === i + 1 ? style.activeButton : ''}\r\n                    onClick={onPageClick}\r\n                >\r\n                    {i + 1}\r\n                </button>\r\n            ));\r\n        }\r\n        if (i + 1 === currentPage - 3 || i + 1 === currentPage + 3) {\r\n            pages.push(` ... `)\r\n        } else if (i + 1 < currentPage - 3 || i + 1 > currentPage + 3 || i + 1 === 1 || i + 1 === pageTotalCount) {\r\n\r\n        } else {\r\n            pages.push((\r\n                <button\r\n                    key={i + 1}\r\n                    className={currentPage === i + 1 ? style.activeButton : ''}\r\n                    onClick={onPageClick}\r\n                >\r\n                    {i + 1}\r\n                </button>\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapperContainer}>\r\n            <select value={countItems} onChange={setPackOnPageNumber}>\r\n                <option value={4}>4</option>\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n            {pages}\r\n        </div>\r\n    );\r\n};","import s from \"../Table.module.css\";\r\nimport SuperButton from \"../../../SuperComponents/c2-SuperButton/SuperButton\";\r\nimport React, {ReactNode, useState} from \"react\";\r\nimport {CardType, PackType} from \"../../Packs/packs-api\";\r\nimport {Modal} from \"../../Modals/Modal\";\r\n\r\ntype TableItemPropsType = {\r\n    packItem?: PackType\r\n    cardItem?: CardType\r\n    deleteItem: (id: string) => void\r\n    updateItem: (id: string, newTitle: string, answer?: string) => void\r\n    children1?: ReactNode\r\n    children2?: ReactNode\r\n}\r\nexport const TableItem = ({packItem, cardItem, ...props}: TableItemPropsType) => {\r\n    let [displayDeleteModal, setDisplayDeleteModal] = useState(false)\r\n    let [displayUpdateModal, setDisplayUpdateModal] = useState(false)\r\n    let [value1, setValue1] = useState(\"\")\r\n    let [value2, setValue2] = useState(\"\")\r\n    const item = packItem ? packItem : cardItem\r\n\r\n    const deleteItem = () => {\r\n        props.deleteItem(item ? item._id : \"\")\r\n        setDisplayDeleteModal(false)\r\n    }\r\n    const updateItem = () => {\r\n        props.updateItem(item ? item._id : \"\", value1, cardItem && value2)\r\n        setDisplayUpdateModal(false)\r\n        setValue1(\"\")\r\n        if (value2 !== \"\") setValue2(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {packItem ?\r\n                <div className={s.tableItem}>\r\n                    {props.children1}\r\n                    <div>{packItem.updated}</div>\r\n                    <div className={s.buttonsDiv}>\r\n                        <SuperButton onClick={() => setDisplayDeleteModal(true)}>Delete</SuperButton>\r\n                        <SuperButton onClick={() => setDisplayUpdateModal(true)}>Update</SuperButton>\r\n                        {props.children2}\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className={s.tableItem}>\r\n                    {props.children1}\r\n                    <div>{cardItem && cardItem.updated}</div>\r\n                    <div className={s.buttonsDiv}>\r\n                        <SuperButton\r\n                            onClick={() => setDisplayDeleteModal(true)}>Delete</SuperButton>\r\n                        <SuperButton onClick={() => setDisplayUpdateModal(true)}>Update</SuperButton>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {displayDeleteModal && <Modal bgOnClick={() => setDisplayDeleteModal(false)} title={\"Are you shore\"} width={500} height={200} backgroundDiv={true}>\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                    <SuperButton onClick={deleteItem}>Yes</SuperButton>\r\n                    <SuperButton onClick={() => setDisplayDeleteModal(false)}>No</SuperButton>\r\n                </div>\r\n            </Modal>}\r\n            {displayUpdateModal && <Modal bgOnClick={() => setDisplayUpdateModal(false)} title={\"Enter updating title\"} width={500} height={200} backgroundDiv={true}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={value1}\r\n                    onChange={(e) => setValue1(e.currentTarget.value)}\r\n                />\r\n                {\r\n                    item === cardItem &&\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value2}\r\n                        onChange={(e) => setValue2(e.currentTarget.value)}/>\r\n                }\r\n                <div style={{display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\"}}>\r\n                    <SuperButton onClick={updateItem}>Submit</SuperButton>\r\n                    <SuperButton onClick={() => setDisplayUpdateModal(false)}>Cancel</SuperButton>\r\n                </div>\r\n            </Modal>}\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Table} from \"../Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {PackType} from \"./packs-api\";\r\nimport {createPackTC, deletePackTC, getPacksTC, updatePackTC} from \"../../store/packs-reducer\";\r\nimport {IsLoadingValuesType} from \"../../store/login-reducer\";\r\nimport {Search} from \"../Search/Search\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {TableItem} from \"../Table/TableItem/TableItem\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Modal} from \"../Modals/Modal\";\r\n\r\n\r\nexport const Packs = () => {\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.packs)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.packs.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n\r\n    const createPack = (title: string) => dispatch(createPackTC(title))\r\n    const deletePack = (id: string) => dispatch(deletePackTC(id))\r\n    const updatePack = (id: string, newTitle: string) => dispatch(updatePackTC(id, newTitle))\r\n\r\n    const show = useSelector<AppRootStateType, boolean>(state => state.packs.showSuccessModal)\r\n\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Packs</h1>\r\n            {isLoading === \"loading\" ?\r\n                <div style={{position: \"absolute\", left: \"48%\", top: \"100px\"}}>Loading...</div>\r\n                :\r\n                null}\r\n            <Search/>\r\n            <Table\r\n                createItem={createPack}\r\n                packs={packs}\r\n                fieldNames={[\"Name\", \"CardsCount\", \"Updated\", \"Add pack\"]}\r\n            >\r\n                {packs && packs.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={updatePack}\r\n                    deleteItem={deletePack}\r\n                    packItem={p}\r\n                    children1={<>\r\n                        <div>{p.name}</div>\r\n                        <div>{p.cardsCount}</div>\r\n                    </>}\r\n                    children2={<>\r\n                        <NavLink to={\"/learn/\" + p._id}>Learn</NavLink>\r\n                        <NavLink to={`/cards/${p._id}`}>Cards</NavLink></>}\r\n                />)}\r\n            </Table>\r\n            <Pagination/>\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                   CSSStyles={{\r\n                       top: top+\"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {Table} from \"../Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {CardType} from \"../Packs/packs-api\";\r\nimport {IsLoadingValuesType} from \"../../store/login-reducer\";\r\nimport {createCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../store/packs-reducer\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {TableItem} from \"../Table/TableItem/TableItem\";\r\n\r\ntype ParamType = {\r\n    id: string\r\n}\r\nexport const Cards = () => {\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.packs.cards)\r\n    const isLoading = useSelector<AppRootStateType, IsLoadingValuesType>(state => state.packs.isLoading)\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<ParamType>()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(id))\r\n    },[dispatch])\r\n\r\n    const updateCard = (cardId: string, newTitle: string, answer?: string) => {\r\n        dispatch(updateCardTC(cardId, newTitle, id, answer))\r\n    }\r\n    const deleteCard = (cardId: string) => dispatch(deleteCardTC(cardId, id))\r\n    const createCard = (question: string, answer?: string) => dispatch(createCardTC({\r\n        cardsPack_id: id,\r\n        question: question,\r\n        answer: answer ? answer : \"\"\r\n    }))\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cards</h1>\r\n            {isLoading === \"loading\" ?\r\n                <div style={{position: \"absolute\", left: \"48%\", top: \"100px\"}}>Loading...</div>\r\n                :\r\n                null }\r\n            <Table\r\n                createItem={createCard}\r\n                cards={cards}\r\n                fieldNames={[\"Question\", \"Answer\", \"Grade\", \"Add item\", \"Updated\"]}\r\n            >\r\n                {cards && cards.map(p => <TableItem\r\n                    key={p._id}\r\n                    updateItem={updateCard}\r\n                    deleteItem={deleteCard}\r\n                    cardItem={p}\r\n                    children1={<><div>{p && p.question}</div>\r\n                        <div>{p && p.answer}</div>\r\n                        <div>{p && p.grade}</div></>}\r\n                />)}\r\n            </Table>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {getCardsTC, updateCardGradeTC} from '../../store/packs-reducer';\r\nimport { AppRootStateType } from '../../store/store';\r\nimport SuperButton from '../../SuperComponents/c2-SuperButton/SuperButton';\r\nimport { packsAPI } from '../Packs/packs-api';\r\nimport style from './LearnPage.module.css'\r\nimport {CardType} from \"../Packs/packs-api\";\r\nimport {Modal} from \"../Modals/Modal\";\r\n\r\ntype ParamType = {\r\n    id: string\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.packs.cards);\r\n    const [checkMode, setCheckMode] = useState(false);\r\n    const [numberCurrentCard, setNumberCurrentCard] = useState(0);\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams<ParamType>();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(id))\r\n    },[dispatch])\r\n\r\n\r\n    const checkAnswer = () => {\r\n        setCheckMode(true);\r\n    }\r\n    const checkNextCard = () => {\r\n        setNumberCurrentCard(sortCards(cards)) ;\r\n        //numberCurrentCard < cards.length -1 ? setNumberCurrentCard(numberCurrentCard + 1) : setNumberCurrentCard(0);\r\n        setCheckMode(false);\r\n    }\r\n\r\n    const addGrade = (grade: number) => {\r\n        dispatch(updateCardGradeTC(cards[numberCurrentCard]._id, grade))\r\n    }\r\n\r\n    const sortCards = (cardsPack: CardType[]) => {\r\n        let gradeArr = cardsPack.map((card, index) => {\r\n            return {index, grade: card.grade ,chance: card.grade !==0 ? (5 - card.grade * Math.random()): 4}\r\n        });\r\n        let currentInd = 0;\r\n        let maxVal = 0;\r\n        gradeArr.forEach((el, index) => {\r\n            if( maxVal < el.chance) {\r\n                currentInd = el.index;\r\n                maxVal = el.chance\r\n            };\r\n        })\r\n       return currentInd\r\n    }\r\n\r\n    const show = useSelector<AppRootStateType, boolean>(state => state.packs.showSuccessModal)\r\n\r\n    let top: number;\r\n    if(show) {\r\n        top = 100\r\n    }else{\r\n        top = -100\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div>\r\n                <div>\r\n                    <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].question: 'Have no cards'}</p>\r\n                </div>\r\n                <div>\r\n                    <SuperButton onClick={checkAnswer} >check answer</SuperButton>\r\n                </div>\r\n            </div>\r\n            {checkMode &&\r\n            <div>\r\n                <p className={style.text}>{cards[numberCurrentCard] ? cards[numberCurrentCard].answer: 'Have no cards'}</p>\r\n                <div>\r\n                    <SuperButton onClick={() => {addGrade(1)}} className={style.button}>не знал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(2)}} className={style.button}>забыл</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(3)}} className={style.button}>перепутал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(4)}} className={style.button}>долго думал</SuperButton>\r\n                    <SuperButton onClick={() => {addGrade(5)}} className={style.button}>знал</SuperButton>\r\n                </div>\r\n                <div>\r\n                <SuperButton className={style.button} onClick={checkNextCard}>След карточка</SuperButton>\r\n                </div>\r\n            </div>}\r\n            <Modal title={\"Success\"} width={100} height={50} backgroundDiv={false} bgOnClick={() => {}}\r\n                   CSSStyles={{\r\n                       top: top+\"px\",\r\n                       backgroundColor: \"lightgreen\"\r\n                   }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default LearnPage;","import React from \"react\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Registration} from \"../Registration/Registration\";\r\nimport {Profile} from \"../Profile/Profile\";\r\nimport {Test} from \"../Test/Test\";\r\nimport {Error} from \"../Error/Error\";\r\nimport {Login} from \"../Login/Login\";\r\nimport PasswordRecoveryContainer from \"../PasswordRecovery/PasswordRecoveryContainer\";\r\nimport NewPasswordEnterContainer from \"../NewPasswordEnter/NewPasswordEnterContainer\";\r\nimport {Packs} from \"../Packs/Packs\";\r\nimport {Cards} from \"../Cards/Cards\";\r\nimport LearnPage from \"../LearnPage/LearnPage\";\r\n\r\nexport const ROUTE = {\r\n    LOGIN: '/login',\r\n    TEST: '/test',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PAS_RECOVERY: '/pas-recovery',\r\n    PAS_ENTER: '/pas-enter/:token',\r\n    ERROR: '/404',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards/:id',\r\n    LEARN_PAGE:'/learn/:id',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path={\"/\"} exact render={() => <Redirect to={ROUTE.TEST}/>}/>\r\n                    <Route path={ROUTE.LOGIN} render={() => <Login/>}/>\r\n                    <Route path={ROUTE.REGISTRATION} render={() => <Registration/>}/>\r\n                    <Route path={ROUTE.PROFILE} render={() => <Profile/>}/>\r\n                    <Route path={ROUTE.PAS_RECOVERY} render={() => <PasswordRecoveryContainer/>}/>\r\n                    <Route path={ROUTE.PAS_ENTER} render={() => <NewPasswordEnterContainer/>}/>\r\n                    <Route path={ROUTE.TEST} render={() => <Test/>}/>\r\n                    <Route path={ROUTE.ERROR} render={() => <Error/>}/>\r\n                    <Route path={ROUTE.PACKS} render={() => <Packs/>}/>\r\n                    <Route path={ROUTE.CARDS} render={() => <Cards/>}/>\r\n                    <Route path={ROUTE.LEARN_PAGE} render={() => <LearnPage/>}/>\r\n                    <Redirect from={'*'} to={ROUTE.ERROR}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ROUTE} from \"../Routes/Routes\";\r\nimport s from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <ul className={s.list}>\r\n                <li><NavLink className={s.link} to={ROUTE.LOGIN}>LOGIN</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.REGISTRATION}>REGISTRATION</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PROFILE}>PROFILE</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PAS_RECOVERY}>FORGOT</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.TEST}>TEST</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.PACKS}>PACKS</NavLink></li>\r\n                <li><NavLink className={s.link} to={ROUTE.CARDS}>CARDS</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {HashRouter} from 'react-router-dom';\nimport './App.css';\nimport {Header} from './Components/Header/Header';\nimport {Routes} from './Components/Routes/Routes';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nconst InitialState = {}\r\n\r\nexport const profileReducer = (state: InitialStateType = InitialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionTypes = any\r\ntype InitialStateType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {recoveryPassReducer} from \"./recoveryPass-reducer\";\r\nimport {enterNewPassReducer} from \"./enterNewPass-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {packsReducer} from \"./packs-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoveryPass: recoveryPassReducer,\r\n    enterNewPass: enterNewPassReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n            <App/>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}